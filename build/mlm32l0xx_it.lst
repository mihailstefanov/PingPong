ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"mlm32l0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB40:
  25              		.file 1 "Src/mlm32l0xx_it.c"
   1:Src/mlm32l0xx_it.c **** /*
   2:Src/mlm32l0xx_it.c ****  / _____)             _              | |
   3:Src/mlm32l0xx_it.c **** ( (____  _____ ____ _| |_ _____  ____| |__
   4:Src/mlm32l0xx_it.c ****  \____ \| ___ |    (_   _) ___ |/ ___)  _ \
   5:Src/mlm32l0xx_it.c ****  _____) ) ____| | | || |_| ____( (___| | | |
   6:Src/mlm32l0xx_it.c **** (______/|_____)_|_|_| \__)_____)\____)_| |_|
   7:Src/mlm32l0xx_it.c ****     (C)2013 Semtech
   8:Src/mlm32l0xx_it.c **** 
   9:Src/mlm32l0xx_it.c **** Description: Bleeper board GPIO driver implementation
  10:Src/mlm32l0xx_it.c **** 
  11:Src/mlm32l0xx_it.c **** License: Revised BSD License, see LICENSE.TXT file include in the project
  12:Src/mlm32l0xx_it.c **** 
  13:Src/mlm32l0xx_it.c **** Maintainer: Miguel Luis and Gregory Cristian
  14:Src/mlm32l0xx_it.c **** */
  15:Src/mlm32l0xx_it.c ****  /******************************************************************************
  16:Src/mlm32l0xx_it.c ****   * @file    mlm32l0xx_it.c
  17:Src/mlm32l0xx_it.c ****   * @author  MCD Application Team
  18:Src/mlm32l0xx_it.c ****   * @version V1.1.5
  19:Src/mlm32l0xx_it.c ****   * @date    30-March-2018
  20:Src/mlm32l0xx_it.c ****   * @brief   manages interupt
  21:Src/mlm32l0xx_it.c ****   ******************************************************************************
  22:Src/mlm32l0xx_it.c ****   * @attention
  23:Src/mlm32l0xx_it.c ****   *
  24:Src/mlm32l0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics International N.V. 
  25:Src/mlm32l0xx_it.c ****   * All rights reserved.</center></h2>
  26:Src/mlm32l0xx_it.c ****   *
  27:Src/mlm32l0xx_it.c ****   * Redistribution and use in source and binary forms, with or without 
  28:Src/mlm32l0xx_it.c ****   * modification, are permitted, provided that the following conditions are met:
  29:Src/mlm32l0xx_it.c ****   *
  30:Src/mlm32l0xx_it.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  31:Src/mlm32l0xx_it.c ****   *    this list of conditions and the following disclaimer.
  32:Src/mlm32l0xx_it.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  33:Src/mlm32l0xx_it.c ****   *    this list of conditions and the following disclaimer in the documentation
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 2


  34:Src/mlm32l0xx_it.c ****   *    and/or other materials provided with the distribution.
  35:Src/mlm32l0xx_it.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  36:Src/mlm32l0xx_it.c ****   *    contributors to this software may be used to endorse or promote products 
  37:Src/mlm32l0xx_it.c ****   *    derived from this software without specific written permission.
  38:Src/mlm32l0xx_it.c ****   * 4. This software, including modifications and/or derivative works of this 
  39:Src/mlm32l0xx_it.c ****   *    software, must execute solely and exclusively on microcontroller or
  40:Src/mlm32l0xx_it.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  41:Src/mlm32l0xx_it.c ****   * 5. Redistribution and use of this software other than as permitted under 
  42:Src/mlm32l0xx_it.c ****   *    this license is void and will automatically terminate your rights under 
  43:Src/mlm32l0xx_it.c ****   *    this license. 
  44:Src/mlm32l0xx_it.c ****   *
  45:Src/mlm32l0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  46:Src/mlm32l0xx_it.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  47:Src/mlm32l0xx_it.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  48:Src/mlm32l0xx_it.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  49:Src/mlm32l0xx_it.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  50:Src/mlm32l0xx_it.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  51:Src/mlm32l0xx_it.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  52:Src/mlm32l0xx_it.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  53:Src/mlm32l0xx_it.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  54:Src/mlm32l0xx_it.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  55:Src/mlm32l0xx_it.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  56:Src/mlm32l0xx_it.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  57:Src/mlm32l0xx_it.c ****   *
  58:Src/mlm32l0xx_it.c ****   ******************************************************************************
  59:Src/mlm32l0xx_it.c ****   */
  60:Src/mlm32l0xx_it.c **** 
  61:Src/mlm32l0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  62:Src/mlm32l0xx_it.c **** #include "hw.h"
  63:Src/mlm32l0xx_it.c **** #include "mlm32l0xx_it.h"
  64:Src/mlm32l0xx_it.c **** 
  65:Src/mlm32l0xx_it.c **** 
  66:Src/mlm32l0xx_it.c **** /** @addtogroup STM32L1xx_HAL_Examples
  67:Src/mlm32l0xx_it.c ****   * @{
  68:Src/mlm32l0xx_it.c ****   */
  69:Src/mlm32l0xx_it.c **** 
  70:Src/mlm32l0xx_it.c **** /** @addtogroup SPI_FullDuplex_ComPolling
  71:Src/mlm32l0xx_it.c ****   * @{
  72:Src/mlm32l0xx_it.c ****   */
  73:Src/mlm32l0xx_it.c **** 
  74:Src/mlm32l0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  75:Src/mlm32l0xx_it.c **** /* Private define ------------------------------------------------------------*/
  76:Src/mlm32l0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  77:Src/mlm32l0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  78:Src/mlm32l0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  79:Src/mlm32l0xx_it.c **** /* Private functions ---------------------------------------------------------*/
  80:Src/mlm32l0xx_it.c **** 
  81:Src/mlm32l0xx_it.c **** /******************************************************************************/
  82:Src/mlm32l0xx_it.c **** /*            Cortex-M3 Processor Exceptions Handlers                         */
  83:Src/mlm32l0xx_it.c **** /******************************************************************************/
  84:Src/mlm32l0xx_it.c **** 
  85:Src/mlm32l0xx_it.c **** /**
  86:Src/mlm32l0xx_it.c ****   * @brief   This function handles NMI exception.
  87:Src/mlm32l0xx_it.c ****   * @param  None
  88:Src/mlm32l0xx_it.c ****   * @retval None
  89:Src/mlm32l0xx_it.c ****   */
  90:Src/mlm32l0xx_it.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 3


  91:Src/mlm32l0xx_it.c **** void NMI_Handler(void)
  92:Src/mlm32l0xx_it.c **** {
  26              		.loc 1 92 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  93:Src/mlm32l0xx_it.c **** }
  31              		.loc 1 93 0
  32              		@ sp needed
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE40:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.code	16
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB41:
  94:Src/mlm32l0xx_it.c **** 
  95:Src/mlm32l0xx_it.c **** 
  96:Src/mlm32l0xx_it.c **** /**
  97:Src/mlm32l0xx_it.c ****   * @brief  This function handles Hard Fault exception.
  98:Src/mlm32l0xx_it.c ****   * @param  None
  99:Src/mlm32l0xx_it.c ****   * @retval None
 100:Src/mlm32l0xx_it.c ****   */
 101:Src/mlm32l0xx_it.c **** 
 102:Src/mlm32l0xx_it.c **** 
 103:Src/mlm32l0xx_it.c **** void HardFault_Handler(void)
 104:Src/mlm32l0xx_it.c **** {
  47              		.loc 1 104 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54              	.LBB4:
  55              	.LBB5:
  56              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 4


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 5


  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 6


 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 7


 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 8


 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 9


 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 10


 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
  57              		.loc 2 375 0 discriminator 1
  58              		.syntax divided
  59              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  60 0000 C046     		nop
  61              	@ 0 "" 2
  62              		.thumb
  63              		.syntax unified
  64 0002 FDE7     		b	.L3
  65              	.LBE5:
  66              	.LBE4:
  67              		.cfi_endproc
  68              	.LFE41:
  70              		.section	.text.MemManage_Handler,"ax",%progbits
  71              		.align	1
  72              		.global	MemManage_Handler
  73              		.syntax unified
  74              		.code	16
  75              		.thumb_func
  76              		.fpu softvfp
  78              	MemManage_Handler:
  79              	.LFB42:
 105:Src/mlm32l0xx_it.c ****   while(1)
 106:Src/mlm32l0xx_it.c ****   {
 107:Src/mlm32l0xx_it.c ****     __NOP();
 108:Src/mlm32l0xx_it.c ****   }
 109:Src/mlm32l0xx_it.c **** 
 110:Src/mlm32l0xx_it.c **** }
 111:Src/mlm32l0xx_it.c **** 
 112:Src/mlm32l0xx_it.c **** 
 113:Src/mlm32l0xx_it.c **** /**
 114:Src/mlm32l0xx_it.c ****   * @brief  This function handles Memory Manage exception.
 115:Src/mlm32l0xx_it.c ****   * @param  None
 116:Src/mlm32l0xx_it.c ****   * @retval None
 117:Src/mlm32l0xx_it.c ****   */
 118:Src/mlm32l0xx_it.c **** void MemManage_Handler(void)
 119:Src/mlm32l0xx_it.c **** {
  80              		.loc 1 119 0
  81              		.cfi_startproc
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 11


  82              		@ Volatile: function does not return.
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              	.L5:
  87 0000 FEE7     		b	.L5
  88              		.cfi_endproc
  89              	.LFE42:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.code	16
  96              		.thumb_func
  97              		.fpu softvfp
  99              	BusFault_Handler:
 100              	.LFB43:
 120:Src/mlm32l0xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
 121:Src/mlm32l0xx_it.c ****   while (1)
 122:Src/mlm32l0xx_it.c ****   {
 123:Src/mlm32l0xx_it.c ****   }
 124:Src/mlm32l0xx_it.c **** }
 125:Src/mlm32l0xx_it.c **** 
 126:Src/mlm32l0xx_it.c **** /**
 127:Src/mlm32l0xx_it.c ****   * @brief  This function handles Bus Fault exception.
 128:Src/mlm32l0xx_it.c ****   * @param  None
 129:Src/mlm32l0xx_it.c ****   * @retval None
 130:Src/mlm32l0xx_it.c ****   */
 131:Src/mlm32l0xx_it.c **** void BusFault_Handler(void)
 132:Src/mlm32l0xx_it.c **** {
 101              		.loc 1 132 0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L7:
 108 0000 FEE7     		b	.L7
 109              		.cfi_endproc
 110              	.LFE43:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.code	16
 117              		.thumb_func
 118              		.fpu softvfp
 120              	UsageFault_Handler:
 121              	.LFB44:
 133:Src/mlm32l0xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
 134:Src/mlm32l0xx_it.c ****   while (1)
 135:Src/mlm32l0xx_it.c ****   {
 136:Src/mlm32l0xx_it.c ****   }
 137:Src/mlm32l0xx_it.c **** }
 138:Src/mlm32l0xx_it.c **** 
 139:Src/mlm32l0xx_it.c **** /**
 140:Src/mlm32l0xx_it.c ****   * @brief  This function handles Usage Fault exception.
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 12


 141:Src/mlm32l0xx_it.c ****   * @param  None
 142:Src/mlm32l0xx_it.c ****   * @retval None
 143:Src/mlm32l0xx_it.c ****   */
 144:Src/mlm32l0xx_it.c **** void UsageFault_Handler(void)
 145:Src/mlm32l0xx_it.c **** {
 122              		.loc 1 145 0
 123              		.cfi_startproc
 124              		@ Volatile: function does not return.
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.L9:
 129 0000 FEE7     		b	.L9
 130              		.cfi_endproc
 131              	.LFE44:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 139              		.fpu softvfp
 141              	SVC_Handler:
 142              	.LFB45:
 146:Src/mlm32l0xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 147:Src/mlm32l0xx_it.c ****   while (1)
 148:Src/mlm32l0xx_it.c ****   {
 149:Src/mlm32l0xx_it.c ****   }
 150:Src/mlm32l0xx_it.c **** }
 151:Src/mlm32l0xx_it.c **** 
 152:Src/mlm32l0xx_it.c **** /**
 153:Src/mlm32l0xx_it.c ****   * @brief  This function handles SVCall exception.
 154:Src/mlm32l0xx_it.c ****   * @param  None
 155:Src/mlm32l0xx_it.c ****   * @retval None
 156:Src/mlm32l0xx_it.c ****   */
 157:Src/mlm32l0xx_it.c **** void SVC_Handler(void)
 158:Src/mlm32l0xx_it.c **** {
 143              		.loc 1 158 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 159:Src/mlm32l0xx_it.c **** }
 148              		.loc 1 159 0
 149              		@ sp needed
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE45:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.code	16
 159              		.thumb_func
 160              		.fpu softvfp
 162              	DebugMon_Handler:
 163              	.LFB46:
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 13


 160:Src/mlm32l0xx_it.c **** 
 161:Src/mlm32l0xx_it.c **** /**
 162:Src/mlm32l0xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 163:Src/mlm32l0xx_it.c ****   * @param  None
 164:Src/mlm32l0xx_it.c ****   * @retval None
 165:Src/mlm32l0xx_it.c ****   */
 166:Src/mlm32l0xx_it.c **** void DebugMon_Handler(void)
 167:Src/mlm32l0xx_it.c **** {
 164              		.loc 1 167 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 168:Src/mlm32l0xx_it.c **** }
 169              		.loc 1 168 0
 170              		@ sp needed
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE46:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.code	16
 180              		.thumb_func
 181              		.fpu softvfp
 183              	PendSV_Handler:
 184              	.LFB47:
 169:Src/mlm32l0xx_it.c **** 
 170:Src/mlm32l0xx_it.c **** /**
 171:Src/mlm32l0xx_it.c ****   * @brief  This function handles PendSVC exception.
 172:Src/mlm32l0xx_it.c ****   * @param  None
 173:Src/mlm32l0xx_it.c ****   * @retval None
 174:Src/mlm32l0xx_it.c ****   */
 175:Src/mlm32l0xx_it.c **** void PendSV_Handler(void)
 176:Src/mlm32l0xx_it.c **** {
 185              		.loc 1 176 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 177:Src/mlm32l0xx_it.c **** }
 190              		.loc 1 177 0
 191              		@ sp needed
 192 0000 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE47:
 196              		.section	.text.SysTick_Handler,"ax",%progbits
 197              		.align	1
 198              		.global	SysTick_Handler
 199              		.syntax unified
 200              		.code	16
 201              		.thumb_func
 202              		.fpu softvfp
 204              	SysTick_Handler:
 205              	.LFB48:
 178:Src/mlm32l0xx_it.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 14


 179:Src/mlm32l0xx_it.c **** /**
 180:Src/mlm32l0xx_it.c ****   * @brief  This function handles SysTick Handler.
 181:Src/mlm32l0xx_it.c ****   * @param  None
 182:Src/mlm32l0xx_it.c ****   * @retval None
 183:Src/mlm32l0xx_it.c ****   */
 184:Src/mlm32l0xx_it.c **** void SysTick_Handler(void)
 185:Src/mlm32l0xx_it.c **** {
 206              		.loc 1 185 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 0000 10B5     		push	{r4, lr}
 211              	.LCFI0:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 4, -8
 214              		.cfi_offset 14, -4
 186:Src/mlm32l0xx_it.c ****   HAL_IncTick();
 215              		.loc 1 186 0
 216 0002 FFF7FEFF 		bl	HAL_IncTick
 217              	.LVL0:
 187:Src/mlm32l0xx_it.c **** }
 218              		.loc 1 187 0
 219              		@ sp needed
 220 0006 10BD     		pop	{r4, pc}
 221              		.cfi_endproc
 222              	.LFE48:
 224              		.section	.text.USART2_IRQHandler,"ax",%progbits
 225              		.align	1
 226              		.global	USART2_IRQHandler
 227              		.syntax unified
 228              		.code	16
 229              		.thumb_func
 230              		.fpu softvfp
 232              	USART2_IRQHandler:
 233              	.LFB49:
 188:Src/mlm32l0xx_it.c **** 
 189:Src/mlm32l0xx_it.c **** /******************************************************************************/
 190:Src/mlm32l0xx_it.c **** /*                 STM32L1xx Peripherals Interrupt Handlers                   */
 191:Src/mlm32l0xx_it.c **** /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
 192:Src/mlm32l0xx_it.c **** /*  available peripheral interrupt handler's name please refer to the startup */
 193:Src/mlm32l0xx_it.c **** /*  file (startup_stm32l1xx.s).                                               */
 194:Src/mlm32l0xx_it.c **** /******************************************************************************/
 195:Src/mlm32l0xx_it.c **** 
 196:Src/mlm32l0xx_it.c **** /**
 197:Src/mlm32l0xx_it.c ****   * @brief  This function handles PPP interrupt request.
 198:Src/mlm32l0xx_it.c ****   * @param  None
 199:Src/mlm32l0xx_it.c ****   * @retval None
 200:Src/mlm32l0xx_it.c ****   */
 201:Src/mlm32l0xx_it.c **** /*void PPP_IRQHandler(void)
 202:Src/mlm32l0xx_it.c **** {
 203:Src/mlm32l0xx_it.c **** }*/
 204:Src/mlm32l0xx_it.c **** 
 205:Src/mlm32l0xx_it.c **** void USART2_IRQHandler( void )
 206:Src/mlm32l0xx_it.c **** {
 234              		.loc 1 206 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 15


 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 10B5     		push	{r4, lr}
 239              	.LCFI1:
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
 242              		.cfi_offset 14, -4
 207:Src/mlm32l0xx_it.c ****    vcom_Print( );
 243              		.loc 1 207 0
 244 0002 FFF7FEFF 		bl	vcom_Print
 245              	.LVL1:
 208:Src/mlm32l0xx_it.c **** }
 246              		.loc 1 208 0
 247              		@ sp needed
 248 0006 10BD     		pop	{r4, pc}
 249              		.cfi_endproc
 250              	.LFE49:
 252              		.section	.text.RTC_IRQHandler,"ax",%progbits
 253              		.align	1
 254              		.global	RTC_IRQHandler
 255              		.syntax unified
 256              		.code	16
 257              		.thumb_func
 258              		.fpu softvfp
 260              	RTC_IRQHandler:
 261              	.LFB50:
 209:Src/mlm32l0xx_it.c **** 
 210:Src/mlm32l0xx_it.c **** void RTC_IRQHandler( void )
 211:Src/mlm32l0xx_it.c **** {
 262              		.loc 1 211 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266 0000 10B5     		push	{r4, lr}
 267              	.LCFI2:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 4, -8
 270              		.cfi_offset 14, -4
 212:Src/mlm32l0xx_it.c ****   HW_RTC_IrqHandler ( );
 271              		.loc 1 212 0
 272 0002 FFF7FEFF 		bl	HW_RTC_IrqHandler
 273              	.LVL2:
 213:Src/mlm32l0xx_it.c **** }
 274              		.loc 1 213 0
 275              		@ sp needed
 276 0006 10BD     		pop	{r4, pc}
 277              		.cfi_endproc
 278              	.LFE50:
 280              		.section	.text.EXTI0_1_IRQHandler,"ax",%progbits
 281              		.align	1
 282              		.global	EXTI0_1_IRQHandler
 283              		.syntax unified
 284              		.code	16
 285              		.thumb_func
 286              		.fpu softvfp
 288              	EXTI0_1_IRQHandler:
 289              	.LFB51:
 214:Src/mlm32l0xx_it.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 16


 215:Src/mlm32l0xx_it.c **** void EXTI0_1_IRQHandler( void )
 216:Src/mlm32l0xx_it.c **** {
 290              		.loc 1 216 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 10B5     		push	{r4, lr}
 295              	.LCFI3:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 4, -8
 298              		.cfi_offset 14, -4
 217:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_0 );
 299              		.loc 1 217 0
 300 0002 0120     		movs	r0, #1
 301 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 302              	.LVL3:
 218:Src/mlm32l0xx_it.c **** 
 219:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_1 );
 303              		.loc 1 219 0
 304 0008 0220     		movs	r0, #2
 305 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 306              	.LVL4:
 220:Src/mlm32l0xx_it.c **** }
 307              		.loc 1 220 0
 308              		@ sp needed
 309 000e 10BD     		pop	{r4, pc}
 310              		.cfi_endproc
 311              	.LFE51:
 313              		.section	.text.EXTI2_3_IRQHandler,"ax",%progbits
 314              		.align	1
 315              		.global	EXTI2_3_IRQHandler
 316              		.syntax unified
 317              		.code	16
 318              		.thumb_func
 319              		.fpu softvfp
 321              	EXTI2_3_IRQHandler:
 322              	.LFB52:
 221:Src/mlm32l0xx_it.c **** 
 222:Src/mlm32l0xx_it.c **** void EXTI2_3_IRQHandler( void )
 223:Src/mlm32l0xx_it.c **** {
 323              		.loc 1 223 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 10B5     		push	{r4, lr}
 328              	.LCFI4:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 4, -8
 331              		.cfi_offset 14, -4
 224:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_2 );
 332              		.loc 1 224 0
 333 0002 0420     		movs	r0, #4
 334 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 335              	.LVL5:
 225:Src/mlm32l0xx_it.c **** 
 226:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_3 );
 336              		.loc 1 226 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 17


 337 0008 0820     		movs	r0, #8
 338 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 339              	.LVL6:
 227:Src/mlm32l0xx_it.c **** }
 340              		.loc 1 227 0
 341              		@ sp needed
 342 000e 10BD     		pop	{r4, pc}
 343              		.cfi_endproc
 344              	.LFE52:
 346              		.section	.text.EXTI4_15_IRQHandler,"ax",%progbits
 347              		.align	1
 348              		.global	EXTI4_15_IRQHandler
 349              		.syntax unified
 350              		.code	16
 351              		.thumb_func
 352              		.fpu softvfp
 354              	EXTI4_15_IRQHandler:
 355              	.LFB53:
 228:Src/mlm32l0xx_it.c **** 
 229:Src/mlm32l0xx_it.c **** 
 230:Src/mlm32l0xx_it.c **** void EXTI4_15_IRQHandler( void )
 231:Src/mlm32l0xx_it.c **** {
 356              		.loc 1 231 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360 0000 10B5     		push	{r4, lr}
 361              	.LCFI5:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 232:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_4 );
 365              		.loc 1 232 0
 366 0002 1020     		movs	r0, #16
 367 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 368              	.LVL7:
 233:Src/mlm32l0xx_it.c ****   
 234:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_5 );
 369              		.loc 1 234 0
 370 0008 2020     		movs	r0, #32
 371 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 372              	.LVL8:
 235:Src/mlm32l0xx_it.c **** 
 236:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_6 );
 373              		.loc 1 236 0
 374 000e 4020     		movs	r0, #64
 375 0010 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 376              	.LVL9:
 237:Src/mlm32l0xx_it.c ****   
 238:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_7 );
 377              		.loc 1 238 0
 378 0014 8020     		movs	r0, #128
 379 0016 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 380              	.LVL10:
 239:Src/mlm32l0xx_it.c **** 
 240:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_8 );
 381              		.loc 1 240 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 18


 382 001a 8020     		movs	r0, #128
 383 001c 4000     		lsls	r0, r0, #1
 384 001e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 385              	.LVL11:
 241:Src/mlm32l0xx_it.c **** 
 242:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_9 );
 386              		.loc 1 242 0
 387 0022 8020     		movs	r0, #128
 388 0024 8000     		lsls	r0, r0, #2
 389 0026 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 390              	.LVL12:
 243:Src/mlm32l0xx_it.c ****   
 244:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_10 );
 391              		.loc 1 244 0
 392 002a 8020     		movs	r0, #128
 393 002c C000     		lsls	r0, r0, #3
 394 002e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 395              	.LVL13:
 245:Src/mlm32l0xx_it.c ****   
 246:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_11 );
 396              		.loc 1 246 0
 397 0032 8020     		movs	r0, #128
 398 0034 0001     		lsls	r0, r0, #4
 399 0036 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 400              	.LVL14:
 247:Src/mlm32l0xx_it.c **** 
 248:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_12 );
 401              		.loc 1 248 0
 402 003a 8020     		movs	r0, #128
 403 003c 4001     		lsls	r0, r0, #5
 404 003e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 405              	.LVL15:
 249:Src/mlm32l0xx_it.c **** 
 250:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_13 );
 406              		.loc 1 250 0
 407 0042 8020     		movs	r0, #128
 408 0044 8001     		lsls	r0, r0, #6
 409 0046 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 410              	.LVL16:
 251:Src/mlm32l0xx_it.c **** 
 252:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_14 );
 411              		.loc 1 252 0
 412 004a 8020     		movs	r0, #128
 413 004c C001     		lsls	r0, r0, #7
 414 004e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 415              	.LVL17:
 253:Src/mlm32l0xx_it.c **** 
 254:Src/mlm32l0xx_it.c ****   HAL_GPIO_EXTI_IRQHandler( GPIO_PIN_15 );
 416              		.loc 1 254 0
 417 0052 8020     		movs	r0, #128
 418 0054 0002     		lsls	r0, r0, #8
 419 0056 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 420              	.LVL18:
 255:Src/mlm32l0xx_it.c **** }
 421              		.loc 1 255 0
 422              		@ sp needed
 423 005a 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 19


 424              		.cfi_endproc
 425              	.LFE53:
 427              		.text
 428              	.Letext0:
 429              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 430              		.file 4 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 431              		.file 5 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 432              		.file 6 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 433              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 434              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/math.h"
 435              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 436              		.file 10 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 437              		.file 11 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 438              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 439              		.file 13 "Inc/hw_rtc.h"
 440              		.file 14 "Inc/vcom.h"
 441              		.file 15 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 mlm32l0xx_it.c
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:16     .text.NMI_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:38     .text.HardFault_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:71     .text.MemManage_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:78     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:92     .text.BusFault_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:113    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:120    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:134    .text.SVC_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:141    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:155    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:162    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:176    .text.PendSV_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:183    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:197    .text.SysTick_Handler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:204    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:225    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:232    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:253    .text.RTC_IRQHandler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:260    .text.RTC_IRQHandler:0000000000000000 RTC_IRQHandler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:281    .text.EXTI0_1_IRQHandler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:288    .text.EXTI0_1_IRQHandler:0000000000000000 EXTI0_1_IRQHandler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:314    .text.EXTI2_3_IRQHandler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:321    .text.EXTI2_3_IRQHandler:0000000000000000 EXTI2_3_IRQHandler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:347    .text.EXTI4_15_IRQHandler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccL6zb5F.s:354    .text.EXTI4_15_IRQHandler:0000000000000000 EXTI4_15_IRQHandler

UNDEFINED SYMBOLS
HAL_IncTick
vcom_Print
HW_RTC_IrqHandler
HAL_GPIO_EXTI_IRQHandler
