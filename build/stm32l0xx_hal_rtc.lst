ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_hal_rtc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_RTC_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_RTC_MspInit:
  24              	.LFB41:
  25              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @file    stm32l0xx_hal_rtc.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @version V1.8.1
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @date    14-April-2017
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          functionalities of the Real Time Clock (RTC) peripheral:
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *           + Initialization/de-initialization functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *           + I/O operation functions
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *           + Peripheral Control functions
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *           + Peripheral State functions
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   @verbatim
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ##### Backup Domain Operating Condition #####
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==============================================================================
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] As long as the supply voltage remains in the operating range, 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        the RTC never stops, regardless of the device status (Run mode, 
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        low power modes or under reset).
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==================================================================
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_CSR register 
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        to their reset values.
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] A backup domain reset is generated when one of the following events occurs:
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Software reset, triggered by setting the RTCRST bit in the 
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         RCC Control Status register (RCC_CSR).
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Power reset (BOR/POR/PDR).
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                    ##### Backup Domain Access #####
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==================================================================
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 2


  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers and RTC backup data registers) 
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        is protected against possible unwanted write accesses. 
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Enable the Power Controller (PWR) APB1 interface clock using the
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RCC_PWR_CLK_ENABLE() function.
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Select the RTC clock source using the __HAL_RCC_RTC_CONFIG() function.
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() function.
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ##### How to use RTC Driver #####
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===================================================================
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..]
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         format using the HAL_RTC_Init() function.
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *** Time and Date configuration ***
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ===================================
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] 
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime()
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *** Alarm configuration ***
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ===========================
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..]
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function.
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             You can also configure the RTC Alarm with interrupt mode using the 
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             HAL_RTC_SetAlarm_IT() function.
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ##### RTC and low power modes #####
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ==================================================================
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        function.
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B),
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and 
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        Standby low power modes.
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        or the RTC wakeup events.
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   [..] The RTC provides a programmable time base for waking up from the
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        Stop or Standby mode at regular intervals.
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        Wakeup from STOP and STANDBY modes is possible only when the RTC clock source
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****        is LSE or LSI.
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    @endverbatim
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ******************************************************************************
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @attention
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * are permitted provided that the following conditions are met:
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 3


  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer.
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      and/or other materials provided with the distribution.
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      may be used to endorse or promote products derived from this software
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *      without specific prior written permission.
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   ******************************************************************************  
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** #include "stm32l0xx_hal.h"
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup STM32L0xx_HAL_Driver
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief RTC HAL module driver
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Exported functions --------------------------------------------------------*/
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group1
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions 
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the 
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 4


 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode,
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base.
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 15-bit synchronous prescaler.
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the 
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter 
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is 
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar 
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              initialization, calendar update or after wakeup from low power modes
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function 
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Initialize the RTC peripheral
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(hrtc == NULL)
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****      return HAL_ERROR;
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_REMAP(hrtc->Init.OutPutRemap));
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(hrtc->State == HAL_RTC_STATE_RESET)
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Initialize RTC MSP */
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 5


 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set RTC state */
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set Initialization mode */
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state */
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_ERROR;
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Clear RTC_CR FMT, OSEL and POL Bits */
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC_CR register */
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutP
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the RTC PRER */
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Exit Initialization mode */
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->OR &= (uint32_t)~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state */
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_OK;
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  DeInitialize the RTC peripheral.
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   This function doesn't reset the RTC Backup Data registers.
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 6


 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set RTC state */
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set Initialization mode */
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state */
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_ERROR;
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset TR, DR and CR registers */
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)0x00000000U;
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR &= RTC_CR_WUCKSEL;
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till WUTWF flag is set and if Time out is reached exit */
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(((hrtc->Instance->ISR) & RTC_ISR_WUTWF) == (uint32_t)RESET)
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Set RTC state */
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset all RTC CR register bits */
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR &= (uint32_t)0x00000000U;
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->WUTR = RTC_WUTR_WUT;
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)0x00000000U;
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)0x00000000U;
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = (uint32_t)0x00000000U;
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CALR = (uint32_t)0x00000000U;
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = (uint32_t)0x00000000U;
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = (uint32_t)0x00000000U;
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset ISR register and exit initialization mode */
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)0x00000000U;
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset Tamper configuration register */
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 7


 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->TAMPCR = 0x00000000U;
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset Option register */
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->OR = 0x00000000U;
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_ERROR;
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET;
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Release Lock */
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Initialize the RTC MSP.
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle  
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval None
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
  26              		.loc 1 359 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   UNUSED(hrtc);
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    */ 
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
  32              		.loc 1 366 0
  33              		@ sp needed
  34 0000 7047     		bx	lr
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 8


  35              		.cfi_endproc
  36              	.LFE41:
  38              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_RTC_MspDeInit
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HAL_RTC_MspDeInit:
  47              	.LFB42:
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  DeInitialize the RTC MSP.
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle 
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval None
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
  48              		.loc 1 374 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.LVL1:
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   UNUSED(hrtc);
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    */ 
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
  54              		.loc 1 381 0
  55              		@ sp needed
  56 0000 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE42:
  60              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
  61              		.align	1
  62              		.global	HAL_RTC_DeactivateAlarm
  63              		.syntax unified
  64              		.code	16
  65              		.thumb_func
  66              		.fpu softvfp
  68              	HAL_RTC_DeactivateAlarm:
  69              	.LFB49:
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group2
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 9


 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Set RTC current time.
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  /* Check the parameters */
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Locked */ 
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sTime->Hours));
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16U) | \
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sTime->Hours);
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 10


 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sTime->Hours) << 16U) | \
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   UNUSED(tmpreg);
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set Initialization mode */
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state */
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Process Unlocked */ 
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_ERROR;
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set the RTC_TR register */
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Clear the bits to be configured */
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BCK);
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the RTC_CR register */
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Exit Initialization mode */
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 11


 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */ 
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_ERROR;
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    hrtc->State = HAL_RTC_STATE_READY;
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    return HAL_OK;
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Get RTC current time.
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure with Hours, Minutes and Seconds fields returned 
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *                with input format (BIN or BCD), also SubSeconds field returning the
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *                RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *                factor to be used for second fraction ratio computation.
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        to ensure consistency between the time and date values.
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the TR register */
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK);
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 12


 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U);
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the input parameters format */
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Set RTC current date.
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sDate: Pointer to date structure
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: specifies the format of the entered parameters.
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  /* Check the parameters */
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  /* Process Locked */
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  __HAL_LOCK(hrtc);
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16U) | \
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 13


 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     datetmpreg = RTC_Bcd2ToByte(sDate->Month);
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(datetmpreg));
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     datetmpreg = RTC_Bcd2ToByte(sDate->Date);
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(datetmpreg));
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << 16U) | \
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << 13U));
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Set Initialization mode */
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC state*/
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Process Unlocked */ 
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_ERROR;
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set the RTC_DR register */
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Exit Initialization mode */
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0, wait for synchro else this check is not needed */
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */ 
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_ERROR;
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 14


 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Process Unlocked */ 
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     return HAL_OK;
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Get RTC current date.
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sDate: Pointer to Date structure
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format 
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the DR register */
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK);
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16U);
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the input parameters format */
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 15


 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim   
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================  
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Locked */
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 16


 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));   
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Configure the Alarm register */
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 17


 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */ 
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 18


 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Change RTC state */
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Unlocked */
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).   
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.   
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Locked */ 
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 19


 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     } 
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     else
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 20


1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));     
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Configure the Alarm register */
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Clear flag alarm A */
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Clear flag alarm B */
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 21


1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Unlocked */
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Deactivate the specified RTC Alarm.
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *            @arg RTC_ALARM_B:  AlarmB
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
  70              		.loc 1 1125 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL2:
  75 0000 70B5     		push	{r4, r5, r6, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 22


  78              		.cfi_offset 4, -16
  79              		.cfi_offset 5, -12
  80              		.cfi_offset 6, -8
  81              		.cfi_offset 14, -4
  82 0002 0400     		movs	r4, r0
  83              	.LVL3:
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Locked */
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
  84              		.loc 1 1132 0
  85 0004 2023     		movs	r3, #32
  86 0006 C35C     		ldrb	r3, [r0, r3]
  87 0008 012B     		cmp	r3, #1
  88 000a 60D0     		beq	.L11
  89              		.loc 1 1132 0 is_stmt 0 discriminator 2
  90 000c 2023     		movs	r3, #32
  91 000e 0122     		movs	r2, #1
  92 0010 C254     		strb	r2, [r0, r3]
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  93              		.loc 1 1134 0 is_stmt 1 discriminator 2
  94 0012 0133     		adds	r3, r3, #1
  95 0014 0132     		adds	r2, r2, #1
  96 0016 C254     		strb	r2, [r0, r3]
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  97              		.loc 1 1137 0 discriminator 2
  98 0018 0368     		ldr	r3, [r0]
  99 001a C832     		adds	r2, r2, #200
 100 001c 5A62     		str	r2, [r3, #36]
 101 001e 0368     		ldr	r3, [r0]
 102 0020 773A     		subs	r2, r2, #119
 103 0022 5A62     		str	r2, [r3, #36]
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
 104              		.loc 1 1139 0 discriminator 2
 105 0024 8023     		movs	r3, #128
 106 0026 5B00     		lsls	r3, r3, #1
 107 0028 9942     		cmp	r1, r3
 108 002a 22D0     		beq	.L12
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* AlarmA */
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 23


1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if( (HAL_GetTick()  - tickstart ) > RTC_TIMEOUT_VALUE)
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* AlarmB */
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 109              		.loc 1 1169 0
 110 002c 0268     		ldr	r2, [r0]
 111 002e 9368     		ldr	r3, [r2, #8]
 112 0030 2849     		ldr	r1, .L13
 113              	.LVL4:
 114 0032 0B40     		ands	r3, r1
 115 0034 9360     		str	r3, [r2, #8]
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc,RTC_IT_ALRB);
 116              		.loc 1 1172 0
 117 0036 0268     		ldr	r2, [r0]
 118 0038 9368     		ldr	r3, [r2, #8]
 119 003a 2749     		ldr	r1, .L13+4
 120 003c 0B40     		ands	r3, r1
 121 003e 9360     		str	r3, [r2, #8]
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 122              		.loc 1 1174 0
 123 0040 FFF7FEFF 		bl	HAL_GetTick
 124              	.LVL5:
 125 0044 0500     		movs	r5, r0
 126              	.LVL6:
 127              	.L9:
1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 128              		.loc 1 1177 0
 129 0046 2368     		ldr	r3, [r4]
 130 0048 DB68     		ldr	r3, [r3, #12]
 131 004a 9B07     		lsls	r3, r3, #30
 132 004c 34D4     		bmi	.L8
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 133              		.loc 1 1179 0
 134 004e FFF7FEFF 		bl	HAL_GetTick
 135              	.LVL7:
 136 0052 401B     		subs	r0, r0, r5
 137 0054 FA23     		movs	r3, #250
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 24


 138 0056 9B00     		lsls	r3, r3, #2
 139 0058 9842     		cmp	r0, r3
 140 005a F4D9     		bls	.L9
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 141              		.loc 1 1182 0
 142 005c 2368     		ldr	r3, [r4]
 143 005e FF22     		movs	r2, #255
 144 0060 5A62     		str	r2, [r3, #36]
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 145              		.loc 1 1184 0
 146 0062 2123     		movs	r3, #33
 147 0064 FC3A     		subs	r2, r2, #252
 148 0066 E254     		strb	r2, [r4, r3]
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         /* Process Unlocked */
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 149              		.loc 1 1187 0
 150 0068 013B     		subs	r3, r3, #1
 151 006a 0022     		movs	r2, #0
 152 006c E254     		strb	r2, [r4, r3]
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 153              		.loc 1 1189 0
 154 006e 0320     		movs	r0, #3
 155 0070 2CE0     		b	.L4
 156              	.LVL8:
 157              	.L12:
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 158              		.loc 1 1142 0
 159 0072 0268     		ldr	r2, [r0]
 160 0074 9368     		ldr	r3, [r2, #8]
 161 0076 1949     		ldr	r1, .L13+8
 162              	.LVL9:
 163 0078 0B40     		ands	r3, r1
 164 007a 9360     		str	r3, [r2, #8]
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 165              		.loc 1 1145 0
 166 007c 0268     		ldr	r2, [r0]
 167 007e 9368     		ldr	r3, [r2, #8]
 168 0080 1749     		ldr	r1, .L13+12
 169 0082 0B40     		ands	r3, r1
 170 0084 9360     		str	r3, [r2, #8]
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 171              		.loc 1 1147 0
 172 0086 FFF7FEFF 		bl	HAL_GetTick
 173              	.LVL10:
 174 008a 0500     		movs	r5, r0
 175              	.LVL11:
 176              	.L6:
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 177              		.loc 1 1150 0
 178 008c 2368     		ldr	r3, [r4]
 179 008e DB68     		ldr	r3, [r3, #12]
 180 0090 DB07     		lsls	r3, r3, #31
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 25


 181 0092 11D4     		bmi	.L8
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 182              		.loc 1 1152 0
 183 0094 FFF7FEFF 		bl	HAL_GetTick
 184              	.LVL12:
 185 0098 401B     		subs	r0, r0, r5
 186 009a FA23     		movs	r3, #250
 187 009c 9B00     		lsls	r3, r3, #2
 188 009e 9842     		cmp	r0, r3
 189 00a0 F4D9     		bls	.L6
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 190              		.loc 1 1155 0
 191 00a2 2368     		ldr	r3, [r4]
 192 00a4 FF22     		movs	r2, #255
 193 00a6 5A62     		str	r2, [r3, #36]
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 194              		.loc 1 1157 0
 195 00a8 2123     		movs	r3, #33
 196 00aa FC3A     		subs	r2, r2, #252
 197 00ac E254     		strb	r2, [r4, r3]
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 198              		.loc 1 1160 0
 199 00ae 013B     		subs	r3, r3, #1
 200 00b0 0022     		movs	r2, #0
 201 00b2 E254     		strb	r2, [r4, r3]
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 202              		.loc 1 1162 0
 203 00b4 0320     		movs	r0, #3
 204 00b6 09E0     		b	.L4
 205              	.L8:
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 206              		.loc 1 1194 0
 207 00b8 2368     		ldr	r3, [r4]
 208 00ba FF22     		movs	r2, #255
 209 00bc 5A62     		str	r2, [r3, #36]
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 210              		.loc 1 1196 0
 211 00be 2123     		movs	r3, #33
 212 00c0 FE3A     		subs	r2, r2, #254
 213 00c2 E254     		strb	r2, [r4, r3]
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Process Unlocked */
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 214              		.loc 1 1199 0
 215 00c4 013B     		subs	r3, r3, #1
 216 00c6 0022     		movs	r2, #0
 217 00c8 E254     		strb	r2, [r4, r3]
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK; 
 218              		.loc 1 1201 0
 219 00ca 0020     		movs	r0, #0
 220              	.LVL13:
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 26


 221              	.L4:
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 222              		.loc 1 1202 0
 223              		@ sp needed
 224              	.LVL14:
 225 00cc 70BD     		pop	{r4, r5, r6, pc}
 226              	.LVL15:
 227              	.L11:
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 228              		.loc 1 1132 0
 229 00ce 0220     		movs	r0, #2
 230              	.LVL16:
 231 00d0 FCE7     		b	.L4
 232              	.L14:
 233 00d2 C046     		.align	2
 234              	.L13:
 235 00d4 FFFDFFFF 		.word	-513
 236 00d8 FFDFFFFF 		.word	-8193
 237 00dc FFFEFFFF 		.word	-257
 238 00e0 FFEFFFFF 		.word	-4097
 239              		.cfi_endproc
 240              	.LFE49:
 242              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 243              		.align	1
 244              		.weak	HAL_RTC_AlarmAEventCallback
 245              		.syntax unified
 246              		.code	16
 247              		.thumb_func
 248              		.fpu softvfp
 250              	HAL_RTC_AlarmAEventCallback:
 251              	.LFB52:
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Date structure
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_ALARM_B: AlarmB  
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the parameters */
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* AlarmA */
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 27


1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_A;
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /* Fill the structure with the read parameters */
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> 16U);
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   else
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_B;
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMBR);
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours = (uint32_t)((tmpreg & (RTC_ALRMBR_HT | RTC_ALRMBR_HU)) >> 16U);
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> 8U);
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU));
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMBR_PM) >> 16U);
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> 24U);
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  }
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Handle Alarm interrupt request.
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval None
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef* hrtc)
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != RESET)
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Get the pending status of the AlarmA Interrupt */
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != RESET)
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 28


1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       /* AlarmA callback */
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       /* Clear the AlarmA interrupt pending bit */
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the AlarmB interrupt source enable status */
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != RESET)
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Get the pending status of the AlarmB Interrupt */
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != RESET)
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       /* AlarmB callback */
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       HAL_RTCEx_AlarmBEventCallback(hrtc);
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       /* Clear the AlarmB interrupt pending bit */
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Change RTC state */
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Alarm A callback.
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval None
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 252              		.loc 1 1321 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257              	.LVL17:
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   UNUSED(hrtc);
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****    */
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 258              		.loc 1 1328 0
 259              		@ sp needed
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE52:
 264              		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 265              		.align	1
 266              		.global	HAL_RTC_AlarmIRQHandler
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 29


 267              		.syntax unified
 268              		.code	16
 269              		.thumb_func
 270              		.fpu softvfp
 272              	HAL_RTC_AlarmIRQHandler:
 273              	.LFB51:
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
 274              		.loc 1 1279 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              	.LVL18:
 279 0000 10B5     		push	{r4, lr}
 280              	.LCFI1:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
 284 0002 0400     		movs	r4, r0
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 285              		.loc 1 1281 0
 286 0004 0368     		ldr	r3, [r0]
 287 0006 9A68     		ldr	r2, [r3, #8]
 288 0008 D204     		lsls	r2, r2, #19
 289 000a 02D5     		bpl	.L17
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 290              		.loc 1 1284 0
 291 000c DB68     		ldr	r3, [r3, #12]
 292 000e DB05     		lsls	r3, r3, #23
 293 0010 0ED4     		bmi	.L19
 294              	.LVL19:
 295              	.L17:
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 296              		.loc 1 1295 0
 297 0012 2368     		ldr	r3, [r4]
 298 0014 9A68     		ldr	r2, [r3, #8]
 299 0016 9204     		lsls	r2, r2, #18
 300 0018 02D5     		bpl	.L18
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 301              		.loc 1 1298 0
 302 001a DB68     		ldr	r3, [r3, #12]
 303 001c 9B05     		lsls	r3, r3, #22
 304 001e 11D4     		bmi	.L20
 305              	.L18:
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 306              		.loc 1 1309 0
 307 0020 0E4B     		ldr	r3, .L21
 308 0022 8022     		movs	r2, #128
 309 0024 9202     		lsls	r2, r2, #10
 310 0026 5A61     		str	r2, [r3, #20]
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 311              		.loc 1 1312 0
 312 0028 2123     		movs	r3, #33
 313 002a 0122     		movs	r2, #1
 314 002c E254     		strb	r2, [r4, r3]
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 315              		.loc 1 1313 0
 316              		@ sp needed
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 30


 317              	.LVL20:
 318 002e 10BD     		pop	{r4, pc}
 319              	.LVL21:
 320              	.L19:
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 321              		.loc 1 1287 0
 322 0030 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 323              	.LVL22:
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 324              		.loc 1 1290 0
 325 0034 2168     		ldr	r1, [r4]
 326 0036 CA68     		ldr	r2, [r1, #12]
 327 0038 FF23     		movs	r3, #255
 328 003a 1A40     		ands	r2, r3
 329 003c 084B     		ldr	r3, .L21+4
 330 003e 1343     		orrs	r3, r2
 331 0040 CB60     		str	r3, [r1, #12]
 332 0042 E6E7     		b	.L17
 333              	.L20:
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 334              		.loc 1 1301 0
 335 0044 2000     		movs	r0, r4
 336 0046 FFF7FEFF 		bl	HAL_RTCEx_AlarmBEventCallback
 337              	.LVL23:
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
 338              		.loc 1 1304 0
 339 004a 2168     		ldr	r1, [r4]
 340 004c CA68     		ldr	r2, [r1, #12]
 341 004e FF23     		movs	r3, #255
 342 0050 1A40     		ands	r2, r3
 343 0052 044B     		ldr	r3, .L21+8
 344 0054 1343     		orrs	r3, r2
 345 0056 CB60     		str	r3, [r1, #12]
 346 0058 E2E7     		b	.L18
 347              	.L22:
 348 005a C046     		.align	2
 349              	.L21:
 350 005c 00040140 		.word	1073808384
 351 0060 7FFEFFFF 		.word	-385
 352 0064 7FFDFFFF 		.word	-641
 353              		.cfi_endproc
 354              	.LFE51:
 356              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 357              		.align	1
 358              		.global	HAL_RTC_PollForAlarmAEvent
 359              		.syntax unified
 360              		.code	16
 361              		.thumb_func
 362              		.fpu softvfp
 364              	HAL_RTC_PollForAlarmAEvent:
 365              	.LFB53:
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Handle AlarmA Polling request.
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Timeout: Timeout duration
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 31


1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 366              		.loc 1 1337 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              	.LVL24:
 371 0000 70B5     		push	{r4, r5, r6, lr}
 372              	.LCFI2:
 373              		.cfi_def_cfa_offset 16
 374              		.cfi_offset 4, -16
 375              		.cfi_offset 5, -12
 376              		.cfi_offset 6, -8
 377              		.cfi_offset 14, -4
 378 0002 0400     		movs	r4, r0
 379 0004 0D00     		movs	r5, r1
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();   
 380              		.loc 1 1339 0
 381 0006 FFF7FEFF 		bl	HAL_GetTick
 382              	.LVL25:
 383 000a 0600     		movs	r6, r0
 384              	.LVL26:
 385              	.L25:
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
 386              		.loc 1 1341 0
 387 000c 2368     		ldr	r3, [r4]
 388 000e DA68     		ldr	r2, [r3, #12]
 389 0010 D205     		lsls	r2, r2, #23
 390 0012 0DD4     		bmi	.L29
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if(Timeout != HAL_MAX_DELAY)
 391              		.loc 1 1343 0
 392 0014 6B1C     		adds	r3, r5, #1
 393 0016 F9D0     		beq	.L25
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 394              		.loc 1 1345 0
 395 0018 002D     		cmp	r5, #0
 396 001a 04D0     		beq	.L26
 397              		.loc 1 1345 0 is_stmt 0 discriminator 1
 398 001c FFF7FEFF 		bl	HAL_GetTick
 399              	.LVL27:
 400 0020 801B     		subs	r0, r0, r6
 401 0022 A842     		cmp	r0, r5
 402 0024 F2D9     		bls	.L25
 403              	.L26:
1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 404              		.loc 1 1347 0 is_stmt 1
 405 0026 2123     		movs	r3, #33
 406 0028 0322     		movs	r2, #3
 407 002a E254     		strb	r2, [r4, r3]
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
 408              		.loc 1 1348 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 32


 409 002c 0320     		movs	r0, #3
 410 002e 09E0     		b	.L27
 411              	.L29:
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 412              		.loc 1 1354 0
 413 0030 D968     		ldr	r1, [r3, #12]
 414 0032 FF22     		movs	r2, #255
 415 0034 1140     		ands	r1, r2
 416 0036 044A     		ldr	r2, .L30
 417 0038 0A43     		orrs	r2, r1
 418 003a DA60     		str	r2, [r3, #12]
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Change RTC state */
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 419              		.loc 1 1357 0
 420 003c 2123     		movs	r3, #33
 421 003e 0122     		movs	r2, #1
 422 0040 E254     		strb	r2, [r4, r3]
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 423              		.loc 1 1359 0
 424 0042 0020     		movs	r0, #0
 425              	.L27:
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 426              		.loc 1 1360 0
 427              		@ sp needed
 428              	.LVL28:
 429              	.LVL29:
 430              	.LVL30:
 431 0044 70BD     		pop	{r4, r5, r6, pc}
 432              	.L31:
 433 0046 C046     		.align	2
 434              	.L30:
 435 0048 7FFEFFFF 		.word	-385
 436              		.cfi_endproc
 437              	.LFE53:
 439              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 440              		.align	1
 441              		.global	HAL_RTC_WaitForSynchro
 442              		.syntax unified
 443              		.code	16
 444              		.thumb_func
 445              		.fpu softvfp
 447              	HAL_RTC_WaitForSynchro:
 448              	.LFB54:
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group4
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief   Peripheral Control functions 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 33


1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     [..]
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     This subsection provides functions allowing to
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Wait until the RTC Time and Date registers (RTC_TR and RTC_DR) are
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         the software must first clear the RSF flag.
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 449              		.loc 1 1396 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              	.LVL31:
 454 0000 70B5     		push	{r4, r5, r6, lr}
 455              	.LCFI3:
 456              		.cfi_def_cfa_offset 16
 457              		.cfi_offset 4, -16
 458              		.cfi_offset 5, -12
 459              		.cfi_offset 6, -8
 460              		.cfi_offset 14, -4
 461 0002 0400     		movs	r4, r0
 462              	.LVL32:
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Clear RSF flag */
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 463              		.loc 1 1400 0
 464 0004 0268     		ldr	r2, [r0]
 465 0006 D368     		ldr	r3, [r2, #12]
 466 0008 A021     		movs	r1, #160
 467 000a 8B43     		bics	r3, r1
 468 000c D360     		str	r3, [r2, #12]
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 469              		.loc 1 1402 0
 470 000e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 34


 471              	.LVL33:
 472 0012 0500     		movs	r5, r0
 473              	.LVL34:
 474              	.L33:
1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 475              		.loc 1 1405 0
 476 0014 2368     		ldr	r3, [r4]
 477 0016 DB68     		ldr	r3, [r3, #12]
 478 0018 9B06     		lsls	r3, r3, #26
 479 001a 08D4     		bmi	.L37
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 480              		.loc 1 1407 0
 481 001c FFF7FEFF 		bl	HAL_GetTick
 482              	.LVL35:
 483 0020 401B     		subs	r0, r0, r5
 484 0022 FA23     		movs	r3, #250
 485 0024 9B00     		lsls	r3, r3, #2
 486 0026 9842     		cmp	r0, r3
 487 0028 F4D9     		bls	.L33
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       return HAL_TIMEOUT;
 488              		.loc 1 1409 0
 489 002a 0320     		movs	r0, #3
 490 002c 00E0     		b	.L34
 491              	.L37:
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 492              		.loc 1 1413 0
 493 002e 0020     		movs	r0, #0
 494              	.L34:
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 495              		.loc 1 1414 0
 496              		@ sp needed
 497              	.LVL36:
 498              	.LVL37:
 499 0030 70BD     		pop	{r4, r5, r6, pc}
 500              		.cfi_endproc
 501              	.LFE54:
 503              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 504              		.align	1
 505              		.global	HAL_RTC_GetState
 506              		.syntax unified
 507              		.code	16
 508              		.thumb_func
 509              		.fpu softvfp
 511              	HAL_RTC_GetState:
 512              	.LFB55:
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 35


1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group5
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *  @brief   Peripheral State functions 
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  *
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @verbatim   
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  ===============================================================================  
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     [..]
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     This subsection provides functions allowing to
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       (+) Get RTC state
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** @endverbatim
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Return the RTC handle state.
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL state
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef* hrtc)
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 513              		.loc 1 1440 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518              	.LVL38:
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Return RTC handle state */
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return hrtc->State;
 519              		.loc 1 1442 0
 520 0000 2123     		movs	r3, #33
 521 0002 C05C     		ldrb	r0, [r0, r3]
 522              	.LVL39:
 523 0004 C0B2     		uxtb	r0, r0
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 524              		.loc 1 1443 0
 525              		@ sp needed
 526 0006 7047     		bx	lr
 527              		.cfi_endproc
 528              	.LFE55:
 530              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 531              		.align	1
 532              		.global	RTC_EnterInitMode
 533              		.syntax unified
 534              		.code	16
 535              		.thumb_func
 536              		.fpu softvfp
 538              	RTC_EnterInitMode:
 539              	.LFB56:
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @}
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 36


1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @{
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Enter the RTC Initialization mode.
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval HAL status
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 540              		.loc 1 1463 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              	.LVL40:
 545 0000 70B5     		push	{r4, r5, r6, lr}
 546              	.LCFI4:
 547              		.cfi_def_cfa_offset 16
 548              		.cfi_offset 4, -16
 549              		.cfi_offset 5, -12
 550              		.cfi_offset 6, -8
 551              		.cfi_offset 14, -4
 552 0002 0400     		movs	r4, r0
 553              	.LVL41:
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 554              		.loc 1 1467 0
 555 0004 0368     		ldr	r3, [r0]
 556 0006 DA68     		ldr	r2, [r3, #12]
 557 0008 5206     		lsls	r2, r2, #25
 558 000a 01D5     		bpl	.L45
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set the Initialization mode */
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       if((HAL_GetTick()  - tickstart ) > RTC_TIMEOUT_VALUE)
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         return HAL_TIMEOUT;
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     }
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return HAL_OK;
 559              		.loc 1 1483 0
 560 000c 0020     		movs	r0, #0
 561              	.LVL42:
 562              	.L40:
1484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 563              		.loc 1 1484 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 37


 564              		@ sp needed
 565              	.LVL43:
 566 000e 70BD     		pop	{r4, r5, r6, pc}
 567              	.LVL44:
 568              	.L45:
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 569              		.loc 1 1470 0
 570 0010 0122     		movs	r2, #1
 571 0012 5242     		rsbs	r2, r2, #0
 572 0014 DA60     		str	r2, [r3, #12]
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 573              		.loc 1 1472 0
 574 0016 FFF7FEFF 		bl	HAL_GetTick
 575              	.LVL45:
 576 001a 0500     		movs	r5, r0
 577              	.LVL46:
 578              	.L41:
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 579              		.loc 1 1474 0
 580 001c 2368     		ldr	r3, [r4]
 581 001e DB68     		ldr	r3, [r3, #12]
 582 0020 5B06     		lsls	r3, r3, #25
 583 0022 08D4     		bmi	.L46
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 584              		.loc 1 1476 0
 585 0024 FFF7FEFF 		bl	HAL_GetTick
 586              	.LVL47:
 587 0028 401B     		subs	r0, r0, r5
 588 002a FA23     		movs	r3, #250
 589 002c 9B00     		lsls	r3, r3, #2
 590 002e 9842     		cmp	r0, r3
 591 0030 F4D9     		bls	.L41
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 592              		.loc 1 1478 0
 593 0032 0320     		movs	r0, #3
 594 0034 EBE7     		b	.L40
 595              	.L46:
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 596              		.loc 1 1483 0
 597 0036 0020     		movs	r0, #0
 598 0038 E9E7     		b	.L40
 599              		.cfi_endproc
 600              	.LFE56:
 602              		.section	.text.HAL_RTC_Init,"ax",%progbits
 603              		.align	1
 604              		.global	HAL_RTC_Init
 605              		.syntax unified
 606              		.code	16
 607              		.thumb_func
 608              		.fpu softvfp
 610              	HAL_RTC_Init:
 611              	.LFB39:
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 612              		.loc 1 179 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 38


 616              	.LVL48:
 617 0000 70B5     		push	{r4, r5, r6, lr}
 618              	.LCFI5:
 619              		.cfi_def_cfa_offset 16
 620              		.cfi_offset 4, -16
 621              		.cfi_offset 5, -12
 622              		.cfi_offset 6, -8
 623              		.cfi_offset 14, -4
 624 0002 041E     		subs	r4, r0, #0
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 625              		.loc 1 181 0
 626 0004 4ED0     		beq	.L51
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 627              		.loc 1 196 0
 628 0006 2123     		movs	r3, #33
 629 0008 C35C     		ldrb	r3, [r0, r3]
 630 000a 002B     		cmp	r3, #0
 631 000c 3CD0     		beq	.L52
 632              	.LVL49:
 633              	.L49:
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 634              		.loc 1 206 0
 635 000e 2123     		movs	r3, #33
 636 0010 0222     		movs	r2, #2
 637 0012 E254     		strb	r2, [r4, r3]
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 638              		.loc 1 209 0
 639 0014 2368     		ldr	r3, [r4]
 640 0016 C832     		adds	r2, r2, #200
 641 0018 5A62     		str	r2, [r3, #36]
 642 001a 2368     		ldr	r3, [r4]
 643 001c 773A     		subs	r2, r2, #119
 644 001e 5A62     		str	r2, [r3, #36]
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 645              		.loc 1 212 0
 646 0020 2000     		movs	r0, r4
 647 0022 FFF7FEFF 		bl	RTC_EnterInitMode
 648              	.LVL50:
 649 0026 0028     		cmp	r0, #0
 650 0028 34D1     		bne	.L53
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Set RTC_CR register */
 651              		.loc 1 225 0
 652 002a 2268     		ldr	r2, [r4]
 653 002c 9368     		ldr	r3, [r2, #8]
 654 002e 1E49     		ldr	r1, .L54
 655 0030 0B40     		ands	r3, r1
 656 0032 9360     		str	r3, [r2, #8]
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 657              		.loc 1 227 0
 658 0034 2168     		ldr	r1, [r4]
 659 0036 8A68     		ldr	r2, [r1, #8]
 660 0038 6368     		ldr	r3, [r4, #4]
 661 003a 2569     		ldr	r5, [r4, #16]
 662 003c 2B43     		orrs	r3, r5
 663 003e A569     		ldr	r5, [r4, #24]
 664 0040 2B43     		orrs	r3, r5
 665 0042 1343     		orrs	r3, r2
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 39


 666 0044 8B60     		str	r3, [r1, #8]
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 667              		.loc 1 230 0
 668 0046 2368     		ldr	r3, [r4]
 669 0048 E268     		ldr	r2, [r4, #12]
 670 004a 1A61     		str	r2, [r3, #16]
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 671              		.loc 1 231 0
 672 004c 2168     		ldr	r1, [r4]
 673 004e 0B69     		ldr	r3, [r1, #16]
 674 0050 A268     		ldr	r2, [r4, #8]
 675 0052 1204     		lsls	r2, r2, #16
 676 0054 1343     		orrs	r3, r2
 677 0056 0B61     		str	r3, [r1, #16]
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 678              		.loc 1 234 0
 679 0058 2268     		ldr	r2, [r4]
 680 005a D368     		ldr	r3, [r2, #12]
 681 005c 8021     		movs	r1, #128
 682 005e 8B43     		bics	r3, r1
 683 0060 D360     		str	r3, [r2, #12]
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->OR |= (uint32_t)(hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 684              		.loc 1 236 0
 685 0062 2268     		ldr	r2, [r4]
 686 0064 D36C     		ldr	r3, [r2, #76]
 687 0066 7D39     		subs	r1, r1, #125
 688 0068 8B43     		bics	r3, r1
 689 006a D364     		str	r3, [r2, #76]
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 690              		.loc 1 237 0
 691 006c 2168     		ldr	r1, [r4]
 692 006e CB6C     		ldr	r3, [r1, #76]
 693 0070 E269     		ldr	r2, [r4, #28]
 694 0072 6569     		ldr	r5, [r4, #20]
 695 0074 2A43     		orrs	r2, r5
 696 0076 1343     		orrs	r3, r2
 697 0078 CB64     		str	r3, [r1, #76]
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 698              		.loc 1 240 0
 699 007a 2368     		ldr	r3, [r4]
 700 007c FF22     		movs	r2, #255
 701 007e 5A62     		str	r2, [r3, #36]
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 702              		.loc 1 243 0
 703 0080 2123     		movs	r3, #33
 704 0082 FE3A     		subs	r2, r2, #254
 705 0084 E254     		strb	r2, [r4, r3]
 706              	.L48:
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 707              		.loc 1 247 0
 708              		@ sp needed
 709              	.LVL51:
 710 0086 70BD     		pop	{r4, r5, r6, pc}
 711              	.LVL52:
 712              	.L52:
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 713              		.loc 1 199 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 40


 714 0088 2033     		adds	r3, r3, #32
 715 008a 0022     		movs	r2, #0
 716 008c C254     		strb	r2, [r0, r3]
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 717              		.loc 1 202 0
 718 008e FFF7FEFF 		bl	HAL_RTC_MspInit
 719              	.LVL53:
 720 0092 BCE7     		b	.L49
 721              	.L53:
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 722              		.loc 1 215 0
 723 0094 2368     		ldr	r3, [r4]
 724 0096 FF22     		movs	r2, #255
 725 0098 5A62     		str	r2, [r3, #36]
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 726              		.loc 1 218 0
 727 009a 2123     		movs	r3, #33
 728 009c FB3A     		subs	r2, r2, #251
 729 009e E254     		strb	r2, [r4, r3]
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 730              		.loc 1 220 0
 731 00a0 0120     		movs	r0, #1
 732 00a2 F0E7     		b	.L48
 733              	.LVL54:
 734              	.L51:
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 735              		.loc 1 183 0
 736 00a4 0120     		movs	r0, #1
 737              	.LVL55:
 738 00a6 EEE7     		b	.L48
 739              	.L55:
 740              		.align	2
 741              	.L54:
 742 00a8 BFFF8FFF 		.word	-7340097
 743              		.cfi_endproc
 744              	.LFE39:
 746              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 747              		.align	1
 748              		.global	HAL_RTC_DeInit
 749              		.syntax unified
 750              		.code	16
 751              		.thumb_func
 752              		.fpu softvfp
 754              	HAL_RTC_DeInit:
 755              	.LFB40:
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 756              		.loc 1 256 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              	.LVL56:
 761 0000 70B5     		push	{r4, r5, r6, lr}
 762              	.LCFI6:
 763              		.cfi_def_cfa_offset 16
 764              		.cfi_offset 4, -16
 765              		.cfi_offset 5, -12
 766              		.cfi_offset 6, -8
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 41


 767              		.cfi_offset 14, -4
 768 0002 0400     		movs	r4, r0
 769              	.LVL57:
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 770              		.loc 1 263 0
 771 0004 2123     		movs	r3, #33
 772 0006 0222     		movs	r2, #2
 773 0008 C254     		strb	r2, [r0, r3]
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 774              		.loc 1 266 0
 775 000a 0368     		ldr	r3, [r0]
 776 000c C832     		adds	r2, r2, #200
 777 000e 5A62     		str	r2, [r3, #36]
 778 0010 0368     		ldr	r3, [r0]
 779 0012 773A     		subs	r2, r2, #119
 780 0014 5A62     		str	r2, [r3, #36]
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 781              		.loc 1 269 0
 782 0016 FFF7FEFF 		bl	RTC_EnterInitMode
 783              	.LVL58:
 784 001a 051E     		subs	r5, r0, #0
 785 001c 08D0     		beq	.L57
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 786              		.loc 1 272 0
 787 001e 2368     		ldr	r3, [r4]
 788 0020 FF22     		movs	r2, #255
 789 0022 5A62     		str	r2, [r3, #36]
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 790              		.loc 1 275 0
 791 0024 2123     		movs	r3, #33
 792 0026 FB3A     		subs	r2, r2, #251
 793 0028 E254     		strb	r2, [r4, r3]
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 794              		.loc 1 277 0
 795 002a 0125     		movs	r5, #1
 796              	.LVL59:
 797              	.L58:
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 798              		.loc 1 351 0
 799 002c 2800     		movs	r0, r5
 800              		@ sp needed
 801              	.LVL60:
 802 002e 70BD     		pop	{r4, r5, r6, pc}
 803              	.LVL61:
 804              	.L57:
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 805              		.loc 1 282 0
 806 0030 2368     		ldr	r3, [r4]
 807 0032 0022     		movs	r2, #0
 808 0034 1A60     		str	r2, [r3]
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 809              		.loc 1 283 0
 810 0036 2368     		ldr	r3, [r4]
 811 0038 2A4A     		ldr	r2, .L64
 812 003a 5A60     		str	r2, [r3, #4]
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 813              		.loc 1 285 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 42


 814 003c 2268     		ldr	r2, [r4]
 815 003e 9168     		ldr	r1, [r2, #8]
 816 0040 0723     		movs	r3, #7
 817 0042 0B40     		ands	r3, r1
 818 0044 9360     		str	r3, [r2, #8]
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 819              		.loc 1 287 0
 820 0046 FFF7FEFF 		bl	HAL_GetTick
 821              	.LVL62:
 822 004a 0600     		movs	r6, r0
 823              	.LVL63:
 824              	.L59:
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 825              		.loc 1 290 0
 826 004c 2368     		ldr	r3, [r4]
 827 004e DA68     		ldr	r2, [r3, #12]
 828 0050 5207     		lsls	r2, r2, #29
 829 0052 0ED4     		bmi	.L62
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 830              		.loc 1 292 0
 831 0054 FFF7FEFF 		bl	HAL_GetTick
 832              	.LVL64:
 833 0058 801B     		subs	r0, r0, r6
 834 005a FA23     		movs	r3, #250
 835 005c 9B00     		lsls	r3, r3, #2
 836 005e 9842     		cmp	r0, r3
 837 0060 F4D9     		bls	.L59
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 838              		.loc 1 295 0
 839 0062 2368     		ldr	r3, [r4]
 840 0064 FF22     		movs	r2, #255
 841 0066 5A62     		str	r2, [r3, #36]
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 842              		.loc 1 298 0
 843 0068 2123     		movs	r3, #33
 844 006a FC3A     		subs	r2, r2, #252
 845 006c E254     		strb	r2, [r4, r3]
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 846              		.loc 1 300 0
 847 006e 0325     		movs	r5, #3
 848 0070 DCE7     		b	.L58
 849              	.L62:
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->WUTR = RTC_WUTR_WUT;
 850              		.loc 1 305 0
 851 0072 9A68     		ldr	r2, [r3, #8]
 852 0074 0022     		movs	r2, #0
 853 0076 9A60     		str	r2, [r3, #8]
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 854              		.loc 1 306 0
 855 0078 2368     		ldr	r3, [r4]
 856 007a 1B49     		ldr	r1, .L64+4
 857 007c 5961     		str	r1, [r3, #20]
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)0x00000000U;
 858              		.loc 1 307 0
 859 007e 2368     		ldr	r3, [r4]
 860 0080 1A49     		ldr	r1, .L64+8
 861 0082 1961     		str	r1, [r3, #16]
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 43


 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)0x00000000U;
 862              		.loc 1 308 0
 863 0084 2368     		ldr	r3, [r4]
 864 0086 DA61     		str	r2, [r3, #28]
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = (uint32_t)0x00000000U;
 865              		.loc 1 309 0
 866 0088 2368     		ldr	r3, [r4]
 867 008a 1A62     		str	r2, [r3, #32]
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->CALR = (uint32_t)0x00000000U;
 868              		.loc 1 310 0
 869 008c 2368     		ldr	r3, [r4]
 870 008e DA62     		str	r2, [r3, #44]
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = (uint32_t)0x00000000U;
 871              		.loc 1 311 0
 872 0090 2368     		ldr	r3, [r4]
 873 0092 DA63     		str	r2, [r3, #60]
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = (uint32_t)0x00000000U;
 874              		.loc 1 312 0
 875 0094 2368     		ldr	r3, [r4]
 876 0096 5A64     		str	r2, [r3, #68]
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 877              		.loc 1 313 0
 878 0098 2368     		ldr	r3, [r4]
 879 009a 9A64     		str	r2, [r3, #72]
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 880              		.loc 1 316 0
 881 009c 2368     		ldr	r3, [r4]
 882 009e DA60     		str	r2, [r3, #12]
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 883              		.loc 1 319 0
 884 00a0 2368     		ldr	r3, [r4]
 885 00a2 1A64     		str	r2, [r3, #64]
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 886              		.loc 1 322 0
 887 00a4 2368     		ldr	r3, [r4]
 888 00a6 DA64     		str	r2, [r3, #76]
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 889              		.loc 1 325 0
 890 00a8 2368     		ldr	r3, [r4]
 891 00aa 9B68     		ldr	r3, [r3, #8]
 892 00ac 9B06     		lsls	r3, r3, #26
 893 00ae 04D4     		bmi	.L61
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 894              		.loc 1 327 0
 895 00b0 2000     		movs	r0, r4
 896 00b2 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 897              	.LVL65:
 898 00b6 0028     		cmp	r0, #0
 899 00b8 0BD1     		bne	.L63
 900              	.L61:
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 901              		.loc 1 340 0
 902 00ba 2368     		ldr	r3, [r4]
 903 00bc FF22     		movs	r2, #255
 904 00be 5A62     		str	r2, [r3, #36]
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 905              		.loc 1 343 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 44


 906 00c0 2000     		movs	r0, r4
 907 00c2 FFF7FEFF 		bl	HAL_RTC_MspDeInit
 908              	.LVL66:
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 909              		.loc 1 345 0
 910 00c6 0023     		movs	r3, #0
 911 00c8 2122     		movs	r2, #33
 912 00ca A354     		strb	r3, [r4, r2]
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 913              		.loc 1 348 0
 914 00cc 013A     		subs	r2, r2, #1
 915 00ce A354     		strb	r3, [r4, r2]
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 916              		.loc 1 350 0
 917 00d0 ACE7     		b	.L58
 918              	.L63:
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 919              		.loc 1 330 0
 920 00d2 2368     		ldr	r3, [r4]
 921 00d4 FF22     		movs	r2, #255
 922 00d6 5A62     		str	r2, [r3, #36]
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 923              		.loc 1 332 0
 924 00d8 2123     		movs	r3, #33
 925 00da FB3A     		subs	r2, r2, #251
 926 00dc E254     		strb	r2, [r4, r3]
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 927              		.loc 1 334 0
 928 00de 0125     		movs	r5, #1
 929 00e0 A4E7     		b	.L58
 930              	.L65:
 931 00e2 C046     		.align	2
 932              	.L64:
 933 00e4 01210000 		.word	8449
 934 00e8 FFFF0000 		.word	65535
 935 00ec FF007F00 		.word	8323327
 936              		.cfi_endproc
 937              	.LFE40:
 939              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 940              		.align	1
 941              		.global	RTC_ByteToBcd2
 942              		.syntax unified
 943              		.code	16
 944              		.thumb_func
 945              		.fpu softvfp
 947              	RTC_ByteToBcd2:
 948              	.LFB57:
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Convert a 2 digit decimal to BCD format.
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Value: Byte to be converted
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval Converted byte
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 949              		.loc 1 1493 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 45


 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954              	.LVL67:
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 955              		.loc 1 1494 0
 956 0000 0023     		movs	r3, #0
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   while(Value >= 10U)
 957              		.loc 1 1496 0
 958 0002 02E0     		b	.L67
 959              	.LVL68:
 960              	.L68:
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     bcdhigh++;
 961              		.loc 1 1498 0
 962 0004 0133     		adds	r3, r3, #1
 963              	.LVL69:
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     Value -= 10U;
 964              		.loc 1 1499 0
 965 0006 0A38     		subs	r0, r0, #10
 966              	.LVL70:
 967 0008 C0B2     		uxtb	r0, r0
 968              	.LVL71:
 969              	.L67:
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 970              		.loc 1 1496 0
 971 000a 0928     		cmp	r0, #9
 972 000c FAD8     		bhi	.L68
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
1501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return  ((uint8_t)(bcdhigh << 4U) | Value);
 973              		.loc 1 1502 0
 974 000e 1B01     		lsls	r3, r3, #4
 975              	.LVL72:
 976 0010 DBB2     		uxtb	r3, r3
 977 0012 1843     		orrs	r0, r3
 978              	.LVL73:
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 979              		.loc 1 1503 0
 980              		@ sp needed
 981 0014 7047     		bx	lr
 982              		.cfi_endproc
 983              	.LFE57:
 985              		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 986              		.align	1
 987              		.global	HAL_RTC_SetTime
 988              		.syntax unified
 989              		.code	16
 990              		.thumb_func
 991              		.fpu softvfp
 993              	HAL_RTC_SetTime:
 994              	.LFB43:
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 995              		.loc 1 412 0
 996              		.cfi_startproc
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 46


 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              	.LVL74:
 1000 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1001              	.LCFI7:
 1002              		.cfi_def_cfa_offset 24
 1003              		.cfi_offset 3, -24
 1004              		.cfi_offset 4, -20
 1005              		.cfi_offset 5, -16
 1006              		.cfi_offset 6, -12
 1007              		.cfi_offset 7, -8
 1008              		.cfi_offset 14, -4
 1009 0002 0400     		movs	r4, r0
 1010 0004 0E00     		movs	r6, r1
 1011              	.LVL75:
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1012              		.loc 1 421 0
 1013 0006 2023     		movs	r3, #32
 1014 0008 C35C     		ldrb	r3, [r0, r3]
 1015 000a 012B     		cmp	r3, #1
 1016 000c 00D1     		bne	.LCB891
 1017 000e 78E0     		b	.L77	@long jump
 1018              	.LCB891:
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1019              		.loc 1 421 0 is_stmt 0 discriminator 2
 1020 0010 2023     		movs	r3, #32
 1021 0012 0121     		movs	r1, #1
 1022              	.LVL76:
 1023 0014 C154     		strb	r1, [r0, r3]
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1024              		.loc 1 423 0 is_stmt 1 discriminator 2
 1025 0016 0133     		adds	r3, r3, #1
 1026 0018 0131     		adds	r1, r1, #1
 1027 001a C154     		strb	r1, [r0, r3]
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1028              		.loc 1 425 0 discriminator 2
 1029 001c 002A     		cmp	r2, #0
 1030 001e 43D1     		bne	.L71
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1031              		.loc 1 427 0
 1032 0020 0368     		ldr	r3, [r0]
 1033 0022 9B68     		ldr	r3, [r3, #8]
 1034 0024 5B06     		lsls	r3, r3, #25
 1035 0026 01D4     		bmi	.L72
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 1036              		.loc 1 434 0
 1037 0028 0023     		movs	r3, #0
 1038 002a F370     		strb	r3, [r6, #3]
 1039              	.L72:
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 1040              		.loc 1 440 0
 1041 002c 3078     		ldrb	r0, [r6]
 1042              	.LVL77:
 1043 002e FFF7FEFF 		bl	RTC_ByteToBcd2
 1044              	.LVL78:
 1045 0032 0504     		lsls	r5, r0, #16
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 47


 1046              		.loc 1 441 0
 1047 0034 7078     		ldrb	r0, [r6, #1]
 1048 0036 FFF7FEFF 		bl	RTC_ByteToBcd2
 1049              	.LVL79:
 1050 003a 0002     		lsls	r0, r0, #8
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 1051              		.loc 1 440 0
 1052 003c 0543     		orrs	r5, r0
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));
 1053              		.loc 1 442 0
 1054 003e B078     		ldrb	r0, [r6, #2]
 1055 0040 FFF7FEFF 		bl	RTC_ByteToBcd2
 1056              	.LVL80:
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 1057              		.loc 1 441 0
 1058 0044 0543     		orrs	r5, r0
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1059              		.loc 1 443 0
 1060 0046 F078     		ldrb	r0, [r6, #3]
 1061 0048 0004     		lsls	r0, r0, #16
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 1062              		.loc 1 440 0
 1063 004a 0543     		orrs	r5, r0
 1064              	.LVL81:
 1065              	.L73:
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1066              		.loc 1 467 0
 1067 004c 2368     		ldr	r3, [r4]
 1068 004e CA22     		movs	r2, #202
 1069 0050 5A62     		str	r2, [r3, #36]
 1070 0052 2368     		ldr	r3, [r4]
 1071 0054 773A     		subs	r2, r2, #119
 1072 0056 5A62     		str	r2, [r3, #36]
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1073              		.loc 1 470 0
 1074 0058 2000     		movs	r0, r4
 1075 005a FFF7FEFF 		bl	RTC_EnterInitMode
 1076              	.LVL82:
 1077 005e 071E     		subs	r7, r0, #0
 1078 0060 33D1     		bne	.L78
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1079              		.loc 1 486 0
 1080 0062 2368     		ldr	r3, [r4]
 1081 0064 2848     		ldr	r0, .L80
 1082 0066 0540     		ands	r5, r0
 1083              	.LVL83:
 1084 0068 1D60     		str	r5, [r3]
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1085              		.loc 1 489 0
 1086 006a 2268     		ldr	r2, [r4]
 1087 006c 9368     		ldr	r3, [r2, #8]
 1088 006e 2749     		ldr	r1, .L80+4
 1089 0070 0B40     		ands	r3, r1
 1090 0072 9360     		str	r3, [r2, #8]
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1091              		.loc 1 492 0
 1092 0074 2168     		ldr	r1, [r4]
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 48


 1093 0076 8B68     		ldr	r3, [r1, #8]
 1094 0078 F268     		ldr	r2, [r6, #12]
 1095 007a 3069     		ldr	r0, [r6, #16]
 1096 007c 0243     		orrs	r2, r0
 1097 007e 1343     		orrs	r3, r2
 1098 0080 8B60     		str	r3, [r1, #8]
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1099              		.loc 1 495 0
 1100 0082 2268     		ldr	r2, [r4]
 1101 0084 D368     		ldr	r3, [r2, #12]
 1102 0086 8021     		movs	r1, #128
 1103 0088 8B43     		bics	r3, r1
 1104 008a D360     		str	r3, [r2, #12]
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1105              		.loc 1 498 0
 1106 008c 2368     		ldr	r3, [r4]
 1107 008e 9B68     		ldr	r3, [r3, #8]
 1108 0090 9B06     		lsls	r3, r3, #26
 1109 0092 26D5     		bpl	.L79
 1110              	.L76:
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
 1111              		.loc 1 515 0
 1112 0094 2368     		ldr	r3, [r4]
 1113 0096 FF22     		movs	r2, #255
 1114 0098 5A62     		str	r2, [r3, #36]
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1115              		.loc 1 517 0
 1116 009a 2123     		movs	r3, #33
 1117 009c FE3A     		subs	r2, r2, #254
 1118 009e E254     		strb	r2, [r4, r3]
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1119              		.loc 1 519 0
 1120 00a0 013B     		subs	r3, r3, #1
 1121 00a2 0022     		movs	r2, #0
 1122 00a4 E254     		strb	r2, [r4, r3]
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1123              		.loc 1 521 0
 1124 00a6 1AE0     		b	.L70
 1125              	.LVL84:
 1126              	.L71:
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1127              		.loc 1 447 0
 1128 00a8 0368     		ldr	r3, [r0]
 1129 00aa 9B68     		ldr	r3, [r3, #8]
 1130 00ac 5B06     		lsls	r3, r3, #25
 1131 00ae 01D4     		bmi	.L74
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 1132              		.loc 1 455 0
 1133 00b0 0023     		movs	r3, #0
 1134 00b2 F370     		strb	r3, [r6, #3]
 1135              	.L74:
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1136              		.loc 1 460 0
 1137 00b4 3578     		ldrb	r5, [r6]
 1138 00b6 2D04     		lsls	r5, r5, #16
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1139              		.loc 1 461 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 49


 1140 00b8 7078     		ldrb	r0, [r6, #1]
 1141              	.LVL85:
 1142 00ba 0002     		lsls	r0, r0, #8
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1143              		.loc 1 460 0
 1144 00bc 0543     		orrs	r5, r0
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));
 1145              		.loc 1 462 0
 1146 00be B078     		ldrb	r0, [r6, #2]
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1147              		.loc 1 461 0
 1148 00c0 0543     		orrs	r5, r0
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1149              		.loc 1 463 0
 1150 00c2 F078     		ldrb	r0, [r6, #3]
 1151 00c4 0004     		lsls	r0, r0, #16
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1152              		.loc 1 460 0
 1153 00c6 0543     		orrs	r5, r0
 1154              	.LVL86:
 1155 00c8 C0E7     		b	.L73
 1156              	.LVL87:
 1157              	.L78:
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1158              		.loc 1 473 0
 1159 00ca 2368     		ldr	r3, [r4]
 1160 00cc FF22     		movs	r2, #255
 1161 00ce 5A62     		str	r2, [r3, #36]
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1162              		.loc 1 476 0
 1163 00d0 2123     		movs	r3, #33
 1164 00d2 FB3A     		subs	r2, r2, #251
 1165 00d4 E254     		strb	r2, [r4, r3]
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1166              		.loc 1 479 0
 1167 00d6 013B     		subs	r3, r3, #1
 1168 00d8 0022     		movs	r2, #0
 1169 00da E254     		strb	r2, [r4, r3]
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1170              		.loc 1 481 0
 1171 00dc 0127     		movs	r7, #1
 1172              	.LVL88:
 1173              	.L70:
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1174              		.loc 1 523 0
 1175 00de 3800     		movs	r0, r7
 1176              		@ sp needed
 1177              	.LVL89:
 1178              	.LVL90:
 1179 00e0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1180              	.LVL91:
 1181              	.L79:
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1182              		.loc 1 500 0
 1183 00e2 2000     		movs	r0, r4
 1184 00e4 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1185              	.LVL92:
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 50


 1186 00e8 0028     		cmp	r0, #0
 1187 00ea D3D0     		beq	.L76
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1188              		.loc 1 503 0
 1189 00ec 2368     		ldr	r3, [r4]
 1190 00ee FF22     		movs	r2, #255
 1191 00f0 5A62     		str	r2, [r3, #36]
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1192              		.loc 1 505 0
 1193 00f2 2123     		movs	r3, #33
 1194 00f4 FB3A     		subs	r2, r2, #251
 1195 00f6 E254     		strb	r2, [r4, r3]
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1196              		.loc 1 508 0
 1197 00f8 013B     		subs	r3, r3, #1
 1198 00fa 0022     		movs	r2, #0
 1199 00fc E254     		strb	r2, [r4, r3]
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1200              		.loc 1 510 0
 1201 00fe 0127     		movs	r7, #1
 1202 0100 EDE7     		b	.L70
 1203              	.LVL93:
 1204              	.L77:
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1205              		.loc 1 421 0
 1206 0102 0227     		movs	r7, #2
 1207 0104 EBE7     		b	.L70
 1208              	.L81:
 1209 0106 C046     		.align	2
 1210              	.L80:
 1211 0108 7F7F7F00 		.word	8355711
 1212 010c FFFFFBFF 		.word	-262145
 1213              		.cfi_endproc
 1214              	.LFE43:
 1216              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1217              		.align	1
 1218              		.global	HAL_RTC_SetDate
 1219              		.syntax unified
 1220              		.code	16
 1221              		.thumb_func
 1222              		.fpu softvfp
 1224              	HAL_RTC_SetDate:
 1225              	.LFB45:
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 1226              		.loc 1 591 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 0
 1229              		@ frame_needed = 0, uses_anonymous_args = 0
 1230              	.LVL94:
 1231 0000 70B5     		push	{r4, r5, r6, lr}
 1232              	.LCFI8:
 1233              		.cfi_def_cfa_offset 16
 1234              		.cfi_offset 4, -16
 1235              		.cfi_offset 5, -12
 1236              		.cfi_offset 6, -8
 1237              		.cfi_offset 14, -4
 1238 0002 0400     		movs	r4, r0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 51


 1239 0004 0E00     		movs	r6, r1
 1240              	.LVL95:
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1241              		.loc 1 598 0
 1242 0006 2023     		movs	r3, #32
 1243 0008 C35C     		ldrb	r3, [r0, r3]
 1244 000a 012B     		cmp	r3, #1
 1245 000c 69D0     		beq	.L89
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1246              		.loc 1 598 0 is_stmt 0 discriminator 2
 1247 000e 2023     		movs	r3, #32
 1248 0010 0121     		movs	r1, #1
 1249              	.LVL96:
 1250 0012 C154     		strb	r1, [r0, r3]
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1251              		.loc 1 600 0 is_stmt 1 discriminator 2
 1252 0014 0133     		adds	r3, r3, #1
 1253 0016 0131     		adds	r1, r1, #1
 1254 0018 C154     		strb	r1, [r0, r3]
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1255              		.loc 1 602 0 discriminator 2
 1256 001a 002A     		cmp	r2, #0
 1257 001c 06D1     		bne	.L84
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1258              		.loc 1 602 0 is_stmt 0 discriminator 1
 1259 001e 7378     		ldrb	r3, [r6, #1]
 1260 0020 D906     		lsls	r1, r3, #27
 1261 0022 03D5     		bpl	.L84
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1262              		.loc 1 604 0 is_stmt 1
 1263 0024 1021     		movs	r1, #16
 1264 0026 8B43     		bics	r3, r1
 1265 0028 0A33     		adds	r3, r3, #10
 1266 002a 7370     		strb	r3, [r6, #1]
 1267              	.L84:
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1268              		.loc 1 609 0
 1269 002c 002A     		cmp	r2, #0
 1270 002e 31D1     		bne	.L85
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1271              		.loc 1 615 0
 1272 0030 F078     		ldrb	r0, [r6, #3]
 1273              	.LVL97:
 1274 0032 FFF7FEFF 		bl	RTC_ByteToBcd2
 1275              	.LVL98:
 1276 0036 0504     		lsls	r5, r0, #16
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1277              		.loc 1 616 0
 1278 0038 7078     		ldrb	r0, [r6, #1]
 1279 003a FFF7FEFF 		bl	RTC_ByteToBcd2
 1280              	.LVL99:
 1281 003e 0002     		lsls	r0, r0, #8
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1282              		.loc 1 615 0
 1283 0040 0543     		orrs	r5, r0
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));
 1284              		.loc 1 617 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 52


 1285 0042 B078     		ldrb	r0, [r6, #2]
 1286 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
 1287              	.LVL100:
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1288              		.loc 1 616 0
 1289 0048 0543     		orrs	r5, r0
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1290              		.loc 1 618 0
 1291 004a 3078     		ldrb	r0, [r6]
 1292 004c 4003     		lsls	r0, r0, #13
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1293              		.loc 1 615 0
 1294 004e 0543     		orrs	r5, r0
 1295              	.LVL101:
 1296              	.L86:
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1297              		.loc 1 635 0
 1298 0050 2368     		ldr	r3, [r4]
 1299 0052 CA22     		movs	r2, #202
 1300 0054 5A62     		str	r2, [r3, #36]
 1301 0056 2368     		ldr	r3, [r4]
 1302 0058 773A     		subs	r2, r2, #119
 1303 005a 5A62     		str	r2, [r3, #36]
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1304              		.loc 1 638 0
 1305 005c 2000     		movs	r0, r4
 1306 005e FFF7FEFF 		bl	RTC_EnterInitMode
 1307              	.LVL102:
 1308 0062 061E     		subs	r6, r0, #0
 1309              	.LVL103:
 1310 0064 21D1     		bne	.L90
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1311              		.loc 1 654 0
 1312 0066 2368     		ldr	r3, [r4]
 1313 0068 1F48     		ldr	r0, .L92
 1314 006a 0540     		ands	r5, r0
 1315              	.LVL104:
 1316 006c 5D60     		str	r5, [r3, #4]
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1317              		.loc 1 657 0
 1318 006e 2268     		ldr	r2, [r4]
 1319 0070 D368     		ldr	r3, [r2, #12]
 1320 0072 8021     		movs	r1, #128
 1321 0074 8B43     		bics	r3, r1
 1322 0076 D360     		str	r3, [r2, #12]
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1323              		.loc 1 660 0
 1324 0078 2368     		ldr	r3, [r4]
 1325 007a 9B68     		ldr	r3, [r3, #8]
 1326 007c 9B06     		lsls	r3, r3, #26
 1327 007e 20D5     		bpl	.L91
 1328              	.L88:
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1329              		.loc 1 677 0
 1330 0080 2368     		ldr	r3, [r4]
 1331 0082 FF22     		movs	r2, #255
 1332 0084 5A62     		str	r2, [r3, #36]
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 53


 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1333              		.loc 1 679 0
 1334 0086 2123     		movs	r3, #33
 1335 0088 FE3A     		subs	r2, r2, #254
 1336 008a E254     		strb	r2, [r4, r3]
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1337              		.loc 1 682 0
 1338 008c 013B     		subs	r3, r3, #1
 1339 008e 0022     		movs	r2, #0
 1340 0090 E254     		strb	r2, [r4, r3]
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1341              		.loc 1 684 0
 1342 0092 14E0     		b	.L83
 1343              	.LVL105:
 1344              	.L85:
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(datetmpreg));
 1345              		.loc 1 623 0
 1346 0094 7378     		ldrb	r3, [r6, #1]
 1347              	.LVL106:
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(datetmpreg));
 1348              		.loc 1 625 0
 1349 0096 B078     		ldrb	r0, [r6, #2]
 1350              	.LVL107:
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1351              		.loc 1 628 0
 1352 0098 F578     		ldrb	r5, [r6, #3]
 1353 009a 2D04     		lsls	r5, r5, #16
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 1354              		.loc 1 629 0
 1355 009c 1B02     		lsls	r3, r3, #8
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1356              		.loc 1 628 0
 1357 009e 1D43     		orrs	r5, r3
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 1358              		.loc 1 629 0
 1359 00a0 0543     		orrs	r5, r0
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1360              		.loc 1 631 0
 1361 00a2 3078     		ldrb	r0, [r6]
 1362 00a4 4003     		lsls	r0, r0, #13
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1363              		.loc 1 628 0
 1364 00a6 0543     		orrs	r5, r0
 1365              	.LVL108:
 1366 00a8 D2E7     		b	.L86
 1367              	.LVL109:
 1368              	.L90:
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1369              		.loc 1 641 0
 1370 00aa 2368     		ldr	r3, [r4]
 1371 00ac FF22     		movs	r2, #255
 1372 00ae 5A62     		str	r2, [r3, #36]
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1373              		.loc 1 644 0
 1374 00b0 2123     		movs	r3, #33
 1375 00b2 FB3A     		subs	r2, r2, #251
 1376 00b4 E254     		strb	r2, [r4, r3]
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 54


 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1377              		.loc 1 647 0
 1378 00b6 013B     		subs	r3, r3, #1
 1379 00b8 0022     		movs	r2, #0
 1380 00ba E254     		strb	r2, [r4, r3]
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1381              		.loc 1 649 0
 1382 00bc 0126     		movs	r6, #1
 1383              	.LVL110:
 1384              	.L83:
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1385              		.loc 1 686 0
 1386 00be 3000     		movs	r0, r6
 1387              		@ sp needed
 1388              	.LVL111:
 1389 00c0 70BD     		pop	{r4, r5, r6, pc}
 1390              	.LVL112:
 1391              	.L91:
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1392              		.loc 1 662 0
 1393 00c2 2000     		movs	r0, r4
 1394 00c4 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1395              	.LVL113:
 1396 00c8 0028     		cmp	r0, #0
 1397 00ca D9D0     		beq	.L88
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1398              		.loc 1 665 0
 1399 00cc 2368     		ldr	r3, [r4]
 1400 00ce FF22     		movs	r2, #255
 1401 00d0 5A62     		str	r2, [r3, #36]
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1402              		.loc 1 667 0
 1403 00d2 2123     		movs	r3, #33
 1404 00d4 FB3A     		subs	r2, r2, #251
 1405 00d6 E254     		strb	r2, [r4, r3]
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1406              		.loc 1 670 0
 1407 00d8 013B     		subs	r3, r3, #1
 1408 00da 0022     		movs	r2, #0
 1409 00dc E254     		strb	r2, [r4, r3]
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1410              		.loc 1 672 0
 1411 00de 0126     		movs	r6, #1
 1412 00e0 EDE7     		b	.L83
 1413              	.LVL114:
 1414              	.L89:
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1415              		.loc 1 598 0
 1416 00e2 0226     		movs	r6, #2
 1417 00e4 EBE7     		b	.L83
 1418              	.L93:
 1419 00e6 C046     		.align	2
 1420              	.L92:
 1421 00e8 3FFFFF00 		.word	16777023
 1422              		.cfi_endproc
 1423              	.LFE45:
 1425              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 55


 1426              		.align	1
 1427              		.global	HAL_RTC_SetAlarm
 1428              		.syntax unified
 1429              		.code	16
 1430              		.thumb_func
 1431              		.fpu softvfp
 1433              	HAL_RTC_SetAlarm:
 1434              	.LFB47:
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1435              		.loc 1 756 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439              	.LVL115:
 1440 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1441              	.LCFI9:
 1442              		.cfi_def_cfa_offset 24
 1443              		.cfi_offset 3, -24
 1444              		.cfi_offset 4, -20
 1445              		.cfi_offset 5, -16
 1446              		.cfi_offset 6, -12
 1447              		.cfi_offset 7, -8
 1448              		.cfi_offset 14, -4
 1449 0002 0400     		movs	r4, r0
 1450 0004 0D00     		movs	r5, r1
 1451              	.LVL116:
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1452              		.loc 1 769 0
 1453 0006 2023     		movs	r3, #32
 1454 0008 C35C     		ldrb	r3, [r0, r3]
 1455 000a 012B     		cmp	r3, #1
 1456 000c 00D1     		bne	.LCB1314
 1457 000e B2E0     		b	.L106	@long jump
 1458              	.LCB1314:
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1459              		.loc 1 769 0 is_stmt 0 discriminator 2
 1460 0010 2023     		movs	r3, #32
 1461 0012 0121     		movs	r1, #1
 1462              	.LVL117:
 1463 0014 C154     		strb	r1, [r0, r3]
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1464              		.loc 1 771 0 is_stmt 1 discriminator 2
 1465 0016 0133     		adds	r3, r3, #1
 1466 0018 0131     		adds	r1, r1, #1
 1467 001a C154     		strb	r1, [r0, r3]
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1468              		.loc 1 773 0 discriminator 2
 1469 001c 002A     		cmp	r2, #0
 1470 001e 50D1     		bne	.L96
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1471              		.loc 1 775 0
 1472 0020 0368     		ldr	r3, [r0]
 1473 0022 9B68     		ldr	r3, [r3, #8]
 1474 0024 5B06     		lsls	r3, r3, #25
 1475 0026 01D4     		bmi	.L97
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1476              		.loc 1 782 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 56


 1477 0028 0023     		movs	r3, #0
 1478 002a EB70     		strb	r3, [r5, #3]
 1479              	.L97:
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1480              		.loc 1 788 0
 1481 002c EE69     		ldr	r6, [r5, #28]
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1482              		.loc 1 797 0
 1483 002e 2878     		ldrb	r0, [r5]
 1484              	.LVL118:
 1485 0030 FFF7FEFF 		bl	RTC_ByteToBcd2
 1486              	.LVL119:
 1487 0034 0704     		lsls	r7, r0, #16
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1488              		.loc 1 798 0
 1489 0036 6878     		ldrb	r0, [r5, #1]
 1490 0038 FFF7FEFF 		bl	RTC_ByteToBcd2
 1491              	.LVL120:
 1492 003c 0002     		lsls	r0, r0, #8
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1493              		.loc 1 797 0
 1494 003e 0743     		orrs	r7, r0
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1495              		.loc 1 799 0
 1496 0040 A878     		ldrb	r0, [r5, #2]
 1497 0042 FFF7FEFF 		bl	RTC_ByteToBcd2
 1498              	.LVL121:
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1499              		.loc 1 798 0
 1500 0046 0743     		orrs	r7, r0
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1501              		.loc 1 800 0
 1502 0048 E878     		ldrb	r0, [r5, #3]
 1503 004a 0004     		lsls	r0, r0, #16
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1504              		.loc 1 799 0
 1505 004c 0743     		orrs	r7, r0
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1506              		.loc 1 801 0
 1507 004e 2023     		movs	r3, #32
 1508 0050 E85C     		ldrb	r0, [r5, r3]
 1509 0052 FFF7FEFF 		bl	RTC_ByteToBcd2
 1510              	.LVL122:
 1511 0056 0006     		lsls	r0, r0, #24
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1512              		.loc 1 800 0
 1513 0058 0743     		orrs	r7, r0
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1514              		.loc 1 801 0
 1515 005a 3E43     		orrs	r6, r7
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1516              		.loc 1 797 0
 1517 005c 6B69     		ldr	r3, [r5, #20]
 1518 005e 1E43     		orrs	r6, r3
 1519              	.LVL123:
 1520              	.L98:
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 57


 1521              		.loc 1 843 0
 1522 0060 6F68     		ldr	r7, [r5, #4]
 1523 0062 AB69     		ldr	r3, [r5, #24]
 1524 0064 1F43     		orrs	r7, r3
 1525              	.LVL124:
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1526              		.loc 1 846 0
 1527 0066 2368     		ldr	r3, [r4]
 1528 0068 CA22     		movs	r2, #202
 1529 006a 5A62     		str	r2, [r3, #36]
 1530 006c 2368     		ldr	r3, [r4]
 1531 006e 773A     		subs	r2, r2, #119
 1532 0070 5A62     		str	r2, [r3, #36]
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1533              		.loc 1 849 0
 1534 0072 6A6A     		ldr	r2, [r5, #36]
 1535 0074 8023     		movs	r3, #128
 1536 0076 5B00     		lsls	r3, r3, #1
 1537 0078 9A42     		cmp	r2, r3
 1538 007a 3BD0     		beq	.L107
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1539              		.loc 1 884 0
 1540 007c 2268     		ldr	r2, [r4]
 1541 007e 9368     		ldr	r3, [r2, #8]
 1542 0080 3E49     		ldr	r1, .L110
 1543 0082 0B40     		ands	r3, r1
 1544 0084 9360     		str	r3, [r2, #8]
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1545              		.loc 1 887 0
 1546 0086 2268     		ldr	r2, [r4]
 1547 0088 9368     		ldr	r3, [r2, #8]
 1548 008a 3D49     		ldr	r1, .L110+4
 1549 008c 0B40     		ands	r3, r1
 1550 008e 9360     		str	r3, [r2, #8]
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1551              		.loc 1 889 0
 1552 0090 FFF7FEFF 		bl	HAL_GetTick
 1553              	.LVL125:
 1554 0094 0500     		movs	r5, r0
 1555              	.LVL126:
 1556              	.L104:
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1557              		.loc 1 891 0
 1558 0096 2368     		ldr	r3, [r4]
 1559 0098 DA68     		ldr	r2, [r3, #12]
 1560 009a 9207     		lsls	r2, r2, #30
 1561 009c 57D4     		bmi	.L108
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1562              		.loc 1 893 0
 1563 009e FFF7FEFF 		bl	HAL_GetTick
 1564              	.LVL127:
 1565 00a2 401B     		subs	r0, r0, r5
 1566 00a4 FA23     		movs	r3, #250
 1567 00a6 9B00     		lsls	r3, r3, #2
 1568 00a8 9842     		cmp	r0, r3
 1569 00aa F4D9     		bls	.L104
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 58


 1570              		.loc 1 896 0
 1571 00ac 2368     		ldr	r3, [r4]
 1572 00ae FF22     		movs	r2, #255
 1573 00b0 5A62     		str	r2, [r3, #36]
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1574              		.loc 1 898 0
 1575 00b2 2123     		movs	r3, #33
 1576 00b4 FC3A     		subs	r2, r2, #252
 1577 00b6 E254     		strb	r2, [r4, r3]
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1578              		.loc 1 901 0
 1579 00b8 013B     		subs	r3, r3, #1
 1580 00ba 0022     		movs	r2, #0
 1581 00bc E254     		strb	r2, [r4, r3]
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1582              		.loc 1 903 0
 1583 00be 0320     		movs	r0, #3
 1584 00c0 58E0     		b	.L95
 1585              	.LVL128:
 1586              	.L96:
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1587              		.loc 1 807 0
 1588 00c2 0368     		ldr	r3, [r0]
 1589 00c4 9B68     		ldr	r3, [r3, #8]
 1590 00c6 5B06     		lsls	r3, r3, #25
 1591 00c8 01D4     		bmi	.L99
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1592              		.loc 1 815 0
 1593 00ca 0023     		movs	r3, #0
 1594 00cc EB70     		strb	r3, [r5, #3]
 1595              	.L99:
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1596              		.loc 1 833 0
 1597 00ce 2E78     		ldrb	r6, [r5]
 1598 00d0 3604     		lsls	r6, r6, #16
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1599              		.loc 1 834 0
 1600 00d2 6B78     		ldrb	r3, [r5, #1]
 1601 00d4 1B02     		lsls	r3, r3, #8
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1602              		.loc 1 833 0
 1603 00d6 1E43     		orrs	r6, r3
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1604              		.loc 1 835 0
 1605 00d8 AB78     		ldrb	r3, [r5, #2]
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1606              		.loc 1 834 0
 1607 00da 1E43     		orrs	r6, r3
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1608              		.loc 1 836 0
 1609 00dc EB78     		ldrb	r3, [r5, #3]
 1610 00de 1B04     		lsls	r3, r3, #16
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1611              		.loc 1 835 0
 1612 00e0 1E43     		orrs	r6, r3
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1613              		.loc 1 837 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 59


 1614 00e2 2023     		movs	r3, #32
 1615 00e4 EB5C     		ldrb	r3, [r5, r3]
 1616 00e6 1B06     		lsls	r3, r3, #24
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1617              		.loc 1 836 0
 1618 00e8 1E43     		orrs	r6, r3
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1619              		.loc 1 837 0
 1620 00ea EB69     		ldr	r3, [r5, #28]
 1621 00ec 1E43     		orrs	r6, r3
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1622              		.loc 1 833 0
 1623 00ee 6B69     		ldr	r3, [r5, #20]
 1624 00f0 1E43     		orrs	r6, r3
 1625              	.LVL129:
 1626 00f2 B5E7     		b	.L98
 1627              	.LVL130:
 1628              	.L107:
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1629              		.loc 1 852 0
 1630 00f4 2268     		ldr	r2, [r4]
 1631 00f6 9368     		ldr	r3, [r2, #8]
 1632 00f8 2249     		ldr	r1, .L110+8
 1633 00fa 0B40     		ands	r3, r1
 1634 00fc 9360     		str	r3, [r2, #8]
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1635              		.loc 1 855 0
 1636 00fe 2268     		ldr	r2, [r4]
 1637 0100 9368     		ldr	r3, [r2, #8]
 1638 0102 2149     		ldr	r1, .L110+12
 1639 0104 0B40     		ands	r3, r1
 1640 0106 9360     		str	r3, [r2, #8]
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1641              		.loc 1 857 0
 1642 0108 FFF7FEFF 		bl	HAL_GetTick
 1643              	.LVL131:
 1644 010c 0500     		movs	r5, r0
 1645              	.LVL132:
 1646              	.L101:
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1647              		.loc 1 859 0
 1648 010e 2368     		ldr	r3, [r4]
 1649 0110 DA68     		ldr	r2, [r3, #12]
 1650 0112 D207     		lsls	r2, r2, #31
 1651 0114 11D4     		bmi	.L109
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1652              		.loc 1 861 0
 1653 0116 FFF7FEFF 		bl	HAL_GetTick
 1654              	.LVL133:
 1655 011a 401B     		subs	r0, r0, r5
 1656 011c FA23     		movs	r3, #250
 1657 011e 9B00     		lsls	r3, r3, #2
 1658 0120 9842     		cmp	r0, r3
 1659 0122 F4D9     		bls	.L101
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****         
 1660              		.loc 1 864 0
 1661 0124 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 60


 1662 0126 FF22     		movs	r2, #255
 1663 0128 5A62     		str	r2, [r3, #36]
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1664              		.loc 1 866 0
 1665 012a 2123     		movs	r3, #33
 1666 012c FC3A     		subs	r2, r2, #252
 1667 012e E254     		strb	r2, [r4, r3]
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1668              		.loc 1 869 0
 1669 0130 013B     		subs	r3, r3, #1
 1670 0132 0022     		movs	r2, #0
 1671 0134 E254     		strb	r2, [r4, r3]
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1672              		.loc 1 871 0
 1673 0136 0320     		movs	r0, #3
 1674 0138 1CE0     		b	.L95
 1675              	.L109:
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1676              		.loc 1 875 0
 1677 013a DE61     		str	r6, [r3, #28]
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1678              		.loc 1 877 0
 1679 013c 2368     		ldr	r3, [r4]
 1680 013e 5F64     		str	r7, [r3, #68]
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1681              		.loc 1 879 0
 1682 0140 2268     		ldr	r2, [r4]
 1683 0142 9168     		ldr	r1, [r2, #8]
 1684 0144 8023     		movs	r3, #128
 1685 0146 5B00     		lsls	r3, r3, #1
 1686 0148 0B43     		orrs	r3, r1
 1687 014a 9360     		str	r3, [r2, #8]
 1688 014c 08E0     		b	.L103
 1689              	.L108:
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1690              		.loc 1 907 0
 1691 014e 1E62     		str	r6, [r3, #32]
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1692              		.loc 1 909 0
 1693 0150 2368     		ldr	r3, [r4]
 1694 0152 9F64     		str	r7, [r3, #72]
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 1695              		.loc 1 911 0
 1696 0154 2268     		ldr	r2, [r4]
 1697 0156 9168     		ldr	r1, [r2, #8]
 1698 0158 8023     		movs	r3, #128
 1699 015a 9B00     		lsls	r3, r3, #2
 1700 015c 0B43     		orrs	r3, r1
 1701 015e 9360     		str	r3, [r2, #8]
 1702              	.L103:
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1703              		.loc 1 915 0
 1704 0160 2368     		ldr	r3, [r4]
 1705 0162 FF22     		movs	r2, #255
 1706 0164 5A62     		str	r2, [r3, #36]
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1707              		.loc 1 918 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 61


 1708 0166 2123     		movs	r3, #33
 1709 0168 FE3A     		subs	r2, r2, #254
 1710 016a E254     		strb	r2, [r4, r3]
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1711              		.loc 1 921 0
 1712 016c 013B     		subs	r3, r3, #1
 1713 016e 0022     		movs	r2, #0
 1714 0170 E254     		strb	r2, [r4, r3]
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 1715              		.loc 1 923 0
 1716 0172 0020     		movs	r0, #0
 1717              	.LVL134:
 1718              	.L95:
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1719              		.loc 1 924 0
 1720              		@ sp needed
 1721              	.LVL135:
 1722 0174 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1723              	.LVL136:
 1724              	.L106:
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1725              		.loc 1 769 0
 1726 0176 0220     		movs	r0, #2
 1727              	.LVL137:
 1728 0178 FCE7     		b	.L95
 1729              	.L111:
 1730 017a C046     		.align	2
 1731              	.L110:
 1732 017c FFFDFFFF 		.word	-513
 1733 0180 FFDFFFFF 		.word	-8193
 1734 0184 FFFEFFFF 		.word	-257
 1735 0188 FFEFFFFF 		.word	-4097
 1736              		.cfi_endproc
 1737              	.LFE47:
 1739              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1740              		.align	1
 1741              		.global	HAL_RTC_SetAlarm_IT
 1742              		.syntax unified
 1743              		.code	16
 1744              		.thumb_func
 1745              		.fpu softvfp
 1747              	HAL_RTC_SetAlarm_IT:
 1748              	.LFB48:
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1749              		.loc 1 940 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 0, uses_anonymous_args = 0
 1753              	.LVL138:
 1754 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1755              	.LCFI10:
 1756              		.cfi_def_cfa_offset 24
 1757              		.cfi_offset 3, -24
 1758              		.cfi_offset 4, -20
 1759              		.cfi_offset 5, -16
 1760              		.cfi_offset 6, -12
 1761              		.cfi_offset 7, -8
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 62


 1762              		.cfi_offset 14, -4
 1763 0002 0400     		movs	r4, r0
 1764 0004 0D00     		movs	r5, r1
 1765              	.LVL139:
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1766              		.loc 1 953 0
 1767 0006 2023     		movs	r3, #32
 1768 0008 C35C     		ldrb	r3, [r0, r3]
 1769 000a 012B     		cmp	r3, #1
 1770 000c 00D1     		bne	.LCB1630
 1771 000e CBE0     		b	.L124	@long jump
 1772              	.LCB1630:
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1773              		.loc 1 953 0 is_stmt 0 discriminator 2
 1774 0010 2023     		movs	r3, #32
 1775 0012 0121     		movs	r1, #1
 1776              	.LVL140:
 1777 0014 C154     		strb	r1, [r0, r3]
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1778              		.loc 1 955 0 is_stmt 1 discriminator 2
 1779 0016 0133     		adds	r3, r3, #1
 1780 0018 0131     		adds	r1, r1, #1
 1781 001a C154     		strb	r1, [r0, r3]
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1782              		.loc 1 957 0 discriminator 2
 1783 001c 002A     		cmp	r2, #0
 1784 001e 52D1     		bne	.L114
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1785              		.loc 1 959 0
 1786 0020 0368     		ldr	r3, [r0]
 1787 0022 9B68     		ldr	r3, [r3, #8]
 1788 0024 5B06     		lsls	r3, r3, #25
 1789 0026 01D4     		bmi	.L115
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1790              		.loc 1 966 0
 1791 0028 0023     		movs	r3, #0
 1792 002a EB70     		strb	r3, [r5, #3]
 1793              	.L115:
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1794              		.loc 1 972 0
 1795 002c EE69     		ldr	r6, [r5, #28]
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1796              		.loc 1 980 0
 1797 002e 2878     		ldrb	r0, [r5]
 1798              	.LVL141:
 1799 0030 FFF7FEFF 		bl	RTC_ByteToBcd2
 1800              	.LVL142:
 1801 0034 0704     		lsls	r7, r0, #16
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1802              		.loc 1 981 0
 1803 0036 6878     		ldrb	r0, [r5, #1]
 1804 0038 FFF7FEFF 		bl	RTC_ByteToBcd2
 1805              	.LVL143:
 1806 003c 0002     		lsls	r0, r0, #8
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1807              		.loc 1 980 0
 1808 003e 0743     		orrs	r7, r0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 63


 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1809              		.loc 1 982 0
 1810 0040 A878     		ldrb	r0, [r5, #2]
 1811 0042 FFF7FEFF 		bl	RTC_ByteToBcd2
 1812              	.LVL144:
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1813              		.loc 1 981 0
 1814 0046 0743     		orrs	r7, r0
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1815              		.loc 1 983 0
 1816 0048 E878     		ldrb	r0, [r5, #3]
 1817 004a 0004     		lsls	r0, r0, #16
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1818              		.loc 1 982 0
 1819 004c 0743     		orrs	r7, r0
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1820              		.loc 1 984 0
 1821 004e 2023     		movs	r3, #32
 1822 0050 E85C     		ldrb	r0, [r5, r3]
 1823 0052 FFF7FEFF 		bl	RTC_ByteToBcd2
 1824              	.LVL145:
 1825 0056 0006     		lsls	r0, r0, #24
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1826              		.loc 1 983 0
 1827 0058 0743     		orrs	r7, r0
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1828              		.loc 1 984 0
 1829 005a 3E43     		orrs	r6, r7
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1830              		.loc 1 980 0
 1831 005c 6B69     		ldr	r3, [r5, #20]
 1832 005e 1E43     		orrs	r6, r3
 1833              	.LVL146:
 1834              	.L116:
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1835              		.loc 1 1024 0
 1836 0060 6F68     		ldr	r7, [r5, #4]
 1837 0062 AB69     		ldr	r3, [r5, #24]
 1838 0064 1F43     		orrs	r7, r3
 1839              	.LVL147:
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1840              		.loc 1 1027 0
 1841 0066 2368     		ldr	r3, [r4]
 1842 0068 CA22     		movs	r2, #202
 1843 006a 5A62     		str	r2, [r3, #36]
 1844 006c 2368     		ldr	r3, [r4]
 1845 006e 773A     		subs	r2, r2, #119
 1846 0070 5A62     		str	r2, [r3, #36]
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 1847              		.loc 1 1030 0
 1848 0072 6A6A     		ldr	r2, [r5, #36]
 1849 0074 8023     		movs	r3, #128
 1850 0076 5B00     		lsls	r3, r3, #1
 1851 0078 9A42     		cmp	r2, r3
 1852 007a 3DD0     		beq	.L125
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
 1853              		.loc 1 1067 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 64


 1854 007c 2268     		ldr	r2, [r4]
 1855 007e 9368     		ldr	r3, [r2, #8]
 1856 0080 4A49     		ldr	r1, .L128
 1857 0082 0B40     		ands	r3, r1
 1858 0084 9360     		str	r3, [r2, #8]
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1859              		.loc 1 1070 0
 1860 0086 2168     		ldr	r1, [r4]
 1861 0088 CA68     		ldr	r2, [r1, #12]
 1862 008a FF23     		movs	r3, #255
 1863 008c 1A40     		ands	r2, r3
 1864 008e 484B     		ldr	r3, .L128+4
 1865 0090 1343     		orrs	r3, r2
 1866 0092 CB60     		str	r3, [r1, #12]
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1867              		.loc 1 1072 0
 1868 0094 FFF7FEFF 		bl	HAL_GetTick
 1869              	.LVL148:
 1870 0098 0500     		movs	r5, r0
 1871              	.LVL149:
 1872              	.L122:
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1873              		.loc 1 1074 0
 1874 009a 2368     		ldr	r3, [r4]
 1875 009c DA68     		ldr	r2, [r3, #12]
 1876 009e 9207     		lsls	r2, r2, #30
 1877 00a0 5FD4     		bmi	.L126
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1878              		.loc 1 1076 0
 1879 00a2 FFF7FEFF 		bl	HAL_GetTick
 1880              	.LVL150:
 1881 00a6 401B     		subs	r0, r0, r5
 1882 00a8 FA23     		movs	r3, #250
 1883 00aa 9B00     		lsls	r3, r3, #2
 1884 00ac 9842     		cmp	r0, r3
 1885 00ae F4D9     		bls	.L122
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1886              		.loc 1 1079 0
 1887 00b0 2368     		ldr	r3, [r4]
 1888 00b2 FF22     		movs	r2, #255
 1889 00b4 5A62     		str	r2, [r3, #36]
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1890              		.loc 1 1081 0
 1891 00b6 2123     		movs	r3, #33
 1892 00b8 FC3A     		subs	r2, r2, #252
 1893 00ba E254     		strb	r2, [r4, r3]
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1894              		.loc 1 1084 0
 1895 00bc 013B     		subs	r3, r3, #1
 1896 00be 0022     		movs	r2, #0
 1897 00c0 E254     		strb	r2, [r4, r3]
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1898              		.loc 1 1086 0
 1899 00c2 0320     		movs	r0, #3
 1900 00c4 6FE0     		b	.L113
 1901              	.LVL151:
 1902              	.L114:
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 65


 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1903              		.loc 1 990 0
 1904 00c6 0368     		ldr	r3, [r0]
 1905 00c8 9B68     		ldr	r3, [r3, #8]
 1906 00ca 5B06     		lsls	r3, r3, #25
 1907 00cc 01D4     		bmi	.L117
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1908              		.loc 1 998 0
 1909 00ce 0023     		movs	r3, #0
 1910 00d0 EB70     		strb	r3, [r5, #3]
 1911              	.L117:
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1912              		.loc 1 1015 0
 1913 00d2 2E78     		ldrb	r6, [r5]
 1914 00d4 3604     		lsls	r6, r6, #16
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1915              		.loc 1 1016 0
 1916 00d6 6B78     		ldrb	r3, [r5, #1]
 1917 00d8 1B02     		lsls	r3, r3, #8
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1918              		.loc 1 1015 0
 1919 00da 1E43     		orrs	r6, r3
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1920              		.loc 1 1017 0
 1921 00dc AB78     		ldrb	r3, [r5, #2]
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1922              		.loc 1 1016 0
 1923 00de 1E43     		orrs	r6, r3
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1924              		.loc 1 1018 0
 1925 00e0 EB78     		ldrb	r3, [r5, #3]
 1926 00e2 1B04     		lsls	r3, r3, #16
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1927              		.loc 1 1017 0
 1928 00e4 1E43     		orrs	r6, r3
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1929              		.loc 1 1019 0
 1930 00e6 2023     		movs	r3, #32
 1931 00e8 EB5C     		ldrb	r3, [r5, r3]
 1932 00ea 1B06     		lsls	r3, r3, #24
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1933              		.loc 1 1018 0
 1934 00ec 1E43     		orrs	r6, r3
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1935              		.loc 1 1019 0
 1936 00ee EB69     		ldr	r3, [r5, #28]
 1937 00f0 1E43     		orrs	r6, r3
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1938              		.loc 1 1015 0
 1939 00f2 6B69     		ldr	r3, [r5, #20]
 1940 00f4 1E43     		orrs	r6, r3
 1941              	.LVL152:
 1942 00f6 B3E7     		b	.L116
 1943              	.LVL153:
 1944              	.L125:
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     
 1945              		.loc 1 1033 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 66


 1946 00f8 2268     		ldr	r2, [r4]
 1947 00fa 9368     		ldr	r3, [r2, #8]
 1948 00fc 2D49     		ldr	r1, .L128+8
 1949 00fe 0B40     		ands	r3, r1
 1950 0100 9360     		str	r3, [r2, #8]
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1951              		.loc 1 1036 0
 1952 0102 2168     		ldr	r1, [r4]
 1953 0104 CA68     		ldr	r2, [r1, #12]
 1954 0106 FF23     		movs	r3, #255
 1955 0108 1A40     		ands	r2, r3
 1956 010a 2B4B     		ldr	r3, .L128+12
 1957 010c 1343     		orrs	r3, r2
 1958 010e CB60     		str	r3, [r1, #12]
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1959              		.loc 1 1038 0
 1960 0110 FFF7FEFF 		bl	HAL_GetTick
 1961              	.LVL154:
 1962 0114 0500     		movs	r5, r0
 1963              	.LVL155:
 1964              	.L119:
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     {
 1965              		.loc 1 1040 0
 1966 0116 2368     		ldr	r3, [r4]
 1967 0118 DA68     		ldr	r2, [r3, #12]
 1968 011a D207     		lsls	r2, r2, #31
 1969 011c 11D4     		bmi	.L127
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       {
 1970              		.loc 1 1042 0
 1971 011e FFF7FEFF 		bl	HAL_GetTick
 1972              	.LVL156:
 1973 0122 401B     		subs	r0, r0, r5
 1974 0124 FA23     		movs	r3, #250
 1975 0126 9B00     		lsls	r3, r3, #2
 1976 0128 9842     		cmp	r0, r3
 1977 012a F4D9     		bls	.L119
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1978              		.loc 1 1045 0
 1979 012c 2368     		ldr	r3, [r4]
 1980 012e FF22     		movs	r2, #255
 1981 0130 5A62     		str	r2, [r3, #36]
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1982              		.loc 1 1047 0
 1983 0132 2123     		movs	r3, #33
 1984 0134 FC3A     		subs	r2, r2, #252
 1985 0136 E254     		strb	r2, [r4, r3]
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 1986              		.loc 1 1050 0
 1987 0138 013B     		subs	r3, r3, #1
 1988 013a 0022     		movs	r2, #0
 1989 013c E254     		strb	r2, [r4, r3]
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****       }
 1990              		.loc 1 1052 0
 1991 013e 0320     		movs	r0, #3
 1992 0140 31E0     		b	.L113
 1993              	.L127:
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 67


 1994              		.loc 1 1056 0
 1995 0142 DE61     		str	r6, [r3, #28]
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1996              		.loc 1 1058 0
 1997 0144 2368     		ldr	r3, [r4]
 1998 0146 5F64     		str	r7, [r3, #68]
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1999              		.loc 1 1060 0
 2000 0148 2268     		ldr	r2, [r4]
 2001 014a 9168     		ldr	r1, [r2, #8]
 2002 014c 8023     		movs	r3, #128
 2003 014e 5B00     		lsls	r3, r3, #1
 2004 0150 0B43     		orrs	r3, r1
 2005 0152 9360     		str	r3, [r2, #8]
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2006              		.loc 1 1062 0
 2007 0154 2268     		ldr	r2, [r4]
 2008 0156 9168     		ldr	r1, [r2, #8]
 2009 0158 8023     		movs	r3, #128
 2010 015a 5B01     		lsls	r3, r3, #5
 2011 015c 0B43     		orrs	r3, r1
 2012 015e 9360     		str	r3, [r2, #8]
 2013 0160 0EE0     		b	.L121
 2014              	.L126:
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 2015              		.loc 1 1090 0
 2016 0162 1E62     		str	r6, [r3, #32]
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 2017              		.loc 1 1092 0
 2018 0164 2368     		ldr	r3, [r4]
 2019 0166 9F64     		str	r7, [r3, #72]
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 2020              		.loc 1 1094 0
 2021 0168 2268     		ldr	r2, [r4]
 2022 016a 9168     		ldr	r1, [r2, #8]
 2023 016c 8023     		movs	r3, #128
 2024 016e 9B00     		lsls	r3, r3, #2
 2025 0170 0B43     		orrs	r3, r1
 2026 0172 9360     		str	r3, [r2, #8]
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2027              		.loc 1 1096 0
 2028 0174 2268     		ldr	r2, [r4]
 2029 0176 9168     		ldr	r1, [r2, #8]
 2030 0178 8023     		movs	r3, #128
 2031 017a 9B01     		lsls	r3, r3, #6
 2032 017c 0B43     		orrs	r3, r1
 2033 017e 9360     		str	r3, [r2, #8]
 2034              	.L121:
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2035              		.loc 1 1100 0
 2036 0180 0E4B     		ldr	r3, .L128+16
 2037 0182 1968     		ldr	r1, [r3]
 2038 0184 8022     		movs	r2, #128
 2039 0186 9202     		lsls	r2, r2, #10
 2040 0188 1143     		orrs	r1, r2
 2041 018a 1960     		str	r1, [r3]
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 68


 2042              		.loc 1 1102 0
 2043 018c 9968     		ldr	r1, [r3, #8]
 2044 018e 0A43     		orrs	r2, r1
 2045 0190 9A60     		str	r2, [r3, #8]
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2046              		.loc 1 1105 0
 2047 0192 2368     		ldr	r3, [r4]
 2048 0194 FF22     		movs	r2, #255
 2049 0196 5A62     		str	r2, [r3, #36]
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2050              		.loc 1 1107 0
 2051 0198 2123     		movs	r3, #33
 2052 019a FE3A     		subs	r2, r2, #254
 2053 019c E254     		strb	r2, [r4, r3]
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2054              		.loc 1 1110 0
 2055 019e 013B     		subs	r3, r3, #1
 2056 01a0 0022     		movs	r2, #0
 2057 01a2 E254     		strb	r2, [r4, r3]
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 2058              		.loc 1 1112 0
 2059 01a4 0020     		movs	r0, #0
 2060              	.LVL157:
 2061              	.L113:
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2062              		.loc 1 1113 0
 2063              		@ sp needed
 2064              	.LVL158:
 2065 01a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2066              	.LVL159:
 2067              	.L124:
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2068              		.loc 1 953 0
 2069 01a8 0220     		movs	r0, #2
 2070              	.LVL160:
 2071 01aa FCE7     		b	.L113
 2072              	.L129:
 2073              		.align	2
 2074              	.L128:
 2075 01ac FFFDFFFF 		.word	-513
 2076 01b0 7FFDFFFF 		.word	-641
 2077 01b4 FFFEFFFF 		.word	-257
 2078 01b8 7FFEFFFF 		.word	-385
 2079 01bc 00040140 		.word	1073808384
 2080              		.cfi_endproc
 2081              	.LFE48:
 2083              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 2084              		.align	1
 2085              		.global	RTC_Bcd2ToByte
 2086              		.syntax unified
 2087              		.code	16
 2088              		.thumb_func
 2089              		.fpu softvfp
 2091              	RTC_Bcd2ToByte:
 2092              	.LFB58:
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
1505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** /**
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 69


1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @param  Value: BCD value to be converted
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   * @retval Converted word
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   */
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** {
 2093              		.loc 1 1511 0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 0
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
 2097              		@ link register save eliminated.
 2098              	.LVL161:
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmp = 0U;
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0U) >> (uint8_t)0x4U) * 10U;
 2099              		.loc 1 1513 0
 2100 0000 0209     		lsrs	r2, r0, #4
 2101 0002 9300     		lsls	r3, r2, #2
 2102 0004 9B18     		adds	r3, r3, r2
 2103 0006 5A00     		lsls	r2, r3, #1
 2104              	.LVL162:
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0FU));
 2105              		.loc 1 1514 0
 2106 0008 0F23     		movs	r3, #15
 2107 000a 1840     		ands	r0, r3
 2108              	.LVL163:
 2109 000c 8018     		adds	r0, r0, r2
 2110 000e C0B2     		uxtb	r0, r0
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** }
 2111              		.loc 1 1515 0
 2112              		@ sp needed
 2113 0010 7047     		bx	lr
 2114              		.cfi_endproc
 2115              	.LFE58:
 2117              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 2118              		.align	1
 2119              		.global	HAL_RTC_GetTime
 2120              		.syntax unified
 2121              		.code	16
 2122              		.thumb_func
 2123              		.fpu softvfp
 2125              	HAL_RTC_GetTime:
 2126              	.LFB44:
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 2127              		.loc 1 547 0
 2128              		.cfi_startproc
 2129              		@ args = 0, pretend = 0, frame = 0
 2130              		@ frame_needed = 0, uses_anonymous_args = 0
 2131              	.LVL164:
 2132 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2133              	.LCFI11:
 2134              		.cfi_def_cfa_offset 24
 2135              		.cfi_offset 3, -24
 2136              		.cfi_offset 4, -20
 2137              		.cfi_offset 5, -16
 2138              		.cfi_offset 6, -12
 2139              		.cfi_offset 7, -8
 2140              		.cfi_offset 14, -4
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 70


 2141 0002 0C00     		movs	r4, r1
 2142              	.LVL165:
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2143              		.loc 1 554 0
 2144 0004 0368     		ldr	r3, [r0]
 2145 0006 9B6A     		ldr	r3, [r3, #40]
 2146 0008 4B60     		str	r3, [r1, #4]
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   
 2147              		.loc 1 557 0
 2148 000a 0368     		ldr	r3, [r0]
 2149 000c 1B69     		ldr	r3, [r3, #16]
 2150 000e 5B04     		lsls	r3, r3, #17
 2151 0010 5B0C     		lsrs	r3, r3, #17
 2152 0012 8B60     		str	r3, [r1, #8]
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2153              		.loc 1 560 0
 2154 0014 0368     		ldr	r3, [r0]
 2155 0016 1B68     		ldr	r3, [r3]
 2156 0018 0E49     		ldr	r1, .L133
 2157              	.LVL166:
 2158 001a 0B40     		ands	r3, r1
 2159              	.LVL167:
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
 2160              		.loc 1 563 0
 2161 001c 1E0C     		lsrs	r6, r3, #16
 2162 001e 3F20     		movs	r0, #63
 2163              	.LVL168:
 2164 0020 3040     		ands	r0, r6
 2165 0022 2070     		strb	r0, [r4]
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 2166              		.loc 1 564 0
 2167 0024 1D0A     		lsrs	r5, r3, #8
 2168 0026 7F27     		movs	r7, #127
 2169 0028 3D40     		ands	r5, r7
 2170 002a 6570     		strb	r5, [r4, #1]
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U);
 2171              		.loc 1 565 0
 2172 002c 1F40     		ands	r7, r3
 2173 002e A770     		strb	r7, [r4, #2]
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2174              		.loc 1 566 0
 2175 0030 4021     		movs	r1, #64
 2176 0032 3140     		ands	r1, r6
 2177 0034 E170     		strb	r1, [r4, #3]
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 2178              		.loc 1 569 0
 2179 0036 002A     		cmp	r2, #0
 2180 0038 0AD1     		bne	.L132
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 2181              		.loc 1 572 0
 2182 003a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2183              	.LVL169:
 2184 003e 2070     		strb	r0, [r4]
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 2185              		.loc 1 573 0
 2186 0040 2800     		movs	r0, r5
 2187 0042 FFF7FEFF 		bl	RTC_Bcd2ToByte
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 71


 2188              	.LVL170:
 2189 0046 6070     		strb	r0, [r4, #1]
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2190              		.loc 1 574 0
 2191 0048 3800     		movs	r0, r7
 2192 004a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2193              	.LVL171:
 2194 004e A070     		strb	r0, [r4, #2]
 2195              	.L132:
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2196              		.loc 1 578 0
 2197 0050 0020     		movs	r0, #0
 2198              		@ sp needed
 2199              	.LVL172:
 2200 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2201              	.L134:
 2202              		.align	2
 2203              	.L133:
 2204 0054 7F7F7F00 		.word	8355711
 2205              		.cfi_endproc
 2206              	.LFE44:
 2208              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 2209              		.align	1
 2210              		.global	HAL_RTC_GetDate
 2211              		.syntax unified
 2212              		.code	16
 2213              		.thumb_func
 2214              		.fpu softvfp
 2216              	HAL_RTC_GetDate:
 2217              	.LFB46:
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 2218              		.loc 1 702 0
 2219              		.cfi_startproc
 2220              		@ args = 0, pretend = 0, frame = 0
 2221              		@ frame_needed = 0, uses_anonymous_args = 0
 2222              	.LVL173:
 2223 0000 70B5     		push	{r4, r5, r6, lr}
 2224              	.LCFI12:
 2225              		.cfi_def_cfa_offset 16
 2226              		.cfi_offset 4, -16
 2227              		.cfi_offset 5, -12
 2228              		.cfi_offset 6, -8
 2229              		.cfi_offset 14, -4
 2230 0002 0C00     		movs	r4, r1
 2231              	.LVL174:
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2232              		.loc 1 709 0
 2233 0004 0368     		ldr	r3, [r0]
 2234 0006 5B68     		ldr	r3, [r3, #4]
 2235 0008 0E49     		ldr	r1, .L137
 2236              	.LVL175:
 2237 000a 0B40     		ands	r3, r1
 2238              	.LVL176:
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 2239              		.loc 1 712 0
 2240 000c 180C     		lsrs	r0, r3, #16
 2241              	.LVL177:
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 72


 2242 000e E070     		strb	r0, [r4, #3]
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 2243              		.loc 1 713 0
 2244 0010 190A     		lsrs	r1, r3, #8
 2245 0012 1F26     		movs	r6, #31
 2246 0014 0E40     		ands	r6, r1
 2247 0016 6670     		strb	r6, [r4, #1]
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 2248              		.loc 1 714 0
 2249 0018 3F25     		movs	r5, #63
 2250 001a 1D40     		ands	r5, r3
 2251 001c A570     		strb	r5, [r4, #2]
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2252              		.loc 1 715 0
 2253 001e 5B0B     		lsrs	r3, r3, #13
 2254              	.LVL178:
 2255 0020 0721     		movs	r1, #7
 2256 0022 0B40     		ands	r3, r1
 2257 0024 2370     		strb	r3, [r4]
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 2258              		.loc 1 718 0
 2259 0026 002A     		cmp	r2, #0
 2260 0028 0AD1     		bne	.L136
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 2261              		.loc 1 721 0
 2262 002a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2263              	.LVL179:
 2264 002e E070     		strb	r0, [r4, #3]
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 2265              		.loc 1 722 0
 2266 0030 3000     		movs	r0, r6
 2267 0032 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2268              	.LVL180:
 2269 0036 6070     		strb	r0, [r4, #1]
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2270              		.loc 1 723 0
 2271 0038 2800     		movs	r0, r5
 2272 003a FFF7FEFF 		bl	RTC_Bcd2ToByte
 2273              	.LVL181:
 2274 003e A070     		strb	r0, [r4, #2]
 2275              	.L136:
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2276              		.loc 1 726 0
 2277 0040 0020     		movs	r0, #0
 2278              		@ sp needed
 2279              	.LVL182:
 2280 0042 70BD     		pop	{r4, r5, r6, pc}
 2281              	.L138:
 2282              		.align	2
 2283              	.L137:
 2284 0044 3FFFFF00 		.word	16777023
 2285              		.cfi_endproc
 2286              	.LFE46:
 2288              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2289              		.align	1
 2290              		.global	HAL_RTC_GetAlarm
 2291              		.syntax unified
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 73


 2292              		.code	16
 2293              		.thumb_func
 2294              		.fpu softvfp
 2296              	HAL_RTC_GetAlarm:
 2297              	.LFB50:
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 2298              		.loc 1 1219 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 0, uses_anonymous_args = 0
 2302              	.LVL183:
 2303 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2304              	.LCFI13:
 2305              		.cfi_def_cfa_offset 24
 2306              		.cfi_offset 3, -24
 2307              		.cfi_offset 4, -20
 2308              		.cfi_offset 5, -16
 2309              		.cfi_offset 6, -12
 2310              		.cfi_offset 7, -8
 2311              		.cfi_offset 14, -4
 2312 0002 0C00     		movs	r4, r1
 2313              	.LVL184:
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 2314              		.loc 1 1226 0
 2315 0004 8021     		movs	r1, #128
 2316              	.LVL185:
 2317 0006 4900     		lsls	r1, r1, #1
 2318 0008 8A42     		cmp	r2, r1
 2319 000a 37D0     		beq	.L143
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2320              		.loc 1 1246 0
 2321 000c 8022     		movs	r2, #128
 2322              	.LVL186:
 2323 000e 9200     		lsls	r2, r2, #2
 2324 0010 6262     		str	r2, [r4, #36]
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2325              		.loc 1 1248 0
 2326 0012 0168     		ldr	r1, [r0]
 2327 0014 0A6A     		ldr	r2, [r1, #32]
 2328              	.LVL187:
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  
 2329              		.loc 1 1249 0
 2330 0016 896C     		ldr	r1, [r1, #72]
 2331 0018 4904     		lsls	r1, r1, #17
 2332 001a 490C     		lsrs	r1, r1, #17
 2333              	.LVL188:
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> 8U);
 2334              		.loc 1 1252 0
 2335 001c 150C     		lsrs	r5, r2, #16
 2336 001e EDB2     		uxtb	r5, r5
 2337 0020 3F20     		movs	r0, #63
 2338              	.LVL189:
 2339 0022 0600     		movs	r6, r0
 2340 0024 2E40     		ands	r6, r5
 2341 0026 2670     		strb	r6, [r4]
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU));
 2342              		.loc 1 1253 0
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 74


 2343 0028 170A     		lsrs	r7, r2, #8
 2344 002a 7F26     		movs	r6, #127
 2345 002c 3740     		ands	r7, r6
 2346 002e 6770     		strb	r7, [r4, #1]
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMBR_PM) >> 16U);
 2347              		.loc 1 1254 0
 2348 0030 1640     		ands	r6, r2
 2349 0032 A670     		strb	r6, [r4, #2]
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2350              		.loc 1 1255 0
 2351 0034 4026     		movs	r6, #64
 2352 0036 3540     		ands	r5, r6
 2353 0038 E570     		strb	r5, [r4, #3]
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> 24U);
 2354              		.loc 1 1256 0
 2355 003a 6160     		str	r1, [r4, #4]
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
 2356              		.loc 1 1257 0
 2357 003c 110E     		lsrs	r1, r2, #24
 2358              	.LVL190:
 2359 003e 0840     		ands	r0, r1
 2360 0040 2021     		movs	r1, #32
 2361 0042 6054     		strb	r0, [r4, r1]
 2362              	.LVL191:
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2363              		.loc 1 1258 0
 2364 0044 8021     		movs	r1, #128
 2365 0046 C905     		lsls	r1, r1, #23
 2366 0048 1140     		ands	r1, r2
 2367 004a E161     		str	r1, [r4, #28]
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****  }
 2368              		.loc 1 1259 0
 2369 004c 1C49     		ldr	r1, .L144
 2370 004e 0A40     		ands	r2, r1
 2371              	.LVL192:
 2372 0050 6261     		str	r2, [r4, #20]
 2373              	.L141:
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   {
 2374              		.loc 1 1262 0
 2375 0052 002B     		cmp	r3, #0
 2376 0054 10D1     		bne	.L142
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2377              		.loc 1 1264 0
 2378 0056 2078     		ldrb	r0, [r4]
 2379 0058 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2380              	.LVL193:
 2381 005c 2070     		strb	r0, [r4]
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2382              		.loc 1 1265 0
 2383 005e 6078     		ldrb	r0, [r4, #1]
 2384 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2385              	.LVL194:
 2386 0064 6070     		strb	r0, [r4, #1]
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2387              		.loc 1 1266 0
 2388 0066 A078     		ldrb	r0, [r4, #2]
 2389 0068 FFF7FEFF 		bl	RTC_Bcd2ToByte
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 75


 2390              	.LVL195:
 2391 006c A070     		strb	r0, [r4, #2]
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2392              		.loc 1 1267 0
 2393 006e 2025     		movs	r5, #32
 2394 0070 605D     		ldrb	r0, [r4, r5]
 2395 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2396              	.LVL196:
 2397 0076 6055     		strb	r0, [r4, r5]
 2398              	.L142:
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2399              		.loc 1 1271 0
 2400 0078 0020     		movs	r0, #0
 2401              		@ sp needed
 2402              	.LVL197:
 2403 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2404              	.LVL198:
 2405              	.L143:
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2406              		.loc 1 1229 0
 2407 007c 6162     		str	r1, [r4, #36]
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
 2408              		.loc 1 1231 0
 2409 007e 0168     		ldr	r1, [r0]
 2410 0080 CA69     		ldr	r2, [r1, #28]
 2411              	.LVL199:
1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c **** 
 2412              		.loc 1 1232 0
 2413 0082 496C     		ldr	r1, [r1, #68]
 2414 0084 4904     		lsls	r1, r1, #17
 2415 0086 490C     		lsrs	r1, r1, #17
 2416              	.LVL200:
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
 2417              		.loc 1 1235 0
 2418 0088 150C     		lsrs	r5, r2, #16
 2419 008a EDB2     		uxtb	r5, r5
 2420 008c 3F20     		movs	r0, #63
 2421              	.LVL201:
 2422 008e 0600     		movs	r6, r0
 2423 0090 2E40     		ands	r6, r5
 2424 0092 2670     		strb	r6, [r4]
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
 2425              		.loc 1 1236 0
 2426 0094 170A     		lsrs	r7, r2, #8
 2427 0096 7F26     		movs	r6, #127
 2428 0098 3740     		ands	r7, r6
 2429 009a 6770     		strb	r7, [r4, #1]
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
 2430              		.loc 1 1237 0
 2431 009c 1640     		ands	r6, r2
 2432 009e A670     		strb	r6, [r4, #2]
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2433              		.loc 1 1238 0
 2434 00a0 4026     		movs	r6, #64
 2435 00a2 3540     		ands	r5, r6
 2436 00a4 E570     		strb	r5, [r4, #3]
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 76


 2437              		.loc 1 1239 0
 2438 00a6 6160     		str	r1, [r4, #4]
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2439              		.loc 1 1240 0
 2440 00a8 110E     		lsrs	r1, r2, #24
 2441              	.LVL202:
 2442 00aa 0840     		ands	r0, r1
 2443 00ac 2021     		movs	r1, #32
 2444 00ae 6054     		strb	r0, [r4, r1]
 2445              	.LVL203:
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2446              		.loc 1 1241 0
 2447 00b0 8021     		movs	r1, #128
 2448 00b2 C905     		lsls	r1, r1, #23
 2449 00b4 1140     		ands	r1, r2
 2450 00b6 E161     		str	r1, [r4, #28]
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_rtc.c ****   }
 2451              		.loc 1 1242 0
 2452 00b8 0149     		ldr	r1, .L144
 2453 00ba 0A40     		ands	r2, r1
 2454              	.LVL204:
 2455 00bc 6261     		str	r2, [r4, #20]
 2456 00be C8E7     		b	.L141
 2457              	.L145:
 2458              		.align	2
 2459              	.L144:
 2460 00c0 80808080 		.word	-2139062144
 2461              		.cfi_endproc
 2462              	.LFE50:
 2464              		.text
 2465              	.Letext0:
 2466              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 2467              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 2468              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 2469              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l072xx.h"
 2470              		.file 6 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 2471              		.file 7 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 2472              		.file 8 "/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h"
 2473              		.file 9 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 2474              		.file 10 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 2475              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 2476              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rtc.h"
 2477              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 2478              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rtc_ex.h"
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal_rtc.c
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:16     .text.HAL_RTC_MspInit:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:23     .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:39     .text.HAL_RTC_MspDeInit:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:46     .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:61     .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:68     .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:235    .text.HAL_RTC_DeactivateAlarm:00000000000000d4 $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:243    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:250    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:265    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:272    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:350    .text.HAL_RTC_AlarmIRQHandler:000000000000005c $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:357    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:364    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:435    .text.HAL_RTC_PollForAlarmAEvent:0000000000000048 $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:440    .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:447    .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:504    .text.HAL_RTC_GetState:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:511    .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:531    .text.RTC_EnterInitMode:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:538    .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:603    .text.HAL_RTC_Init:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:610    .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:742    .text.HAL_RTC_Init:00000000000000a8 $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:747    .text.HAL_RTC_DeInit:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:754    .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:933    .text.HAL_RTC_DeInit:00000000000000e4 $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:940    .text.RTC_ByteToBcd2:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:947    .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:986    .text.HAL_RTC_SetTime:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:993    .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1211   .text.HAL_RTC_SetTime:0000000000000108 $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1217   .text.HAL_RTC_SetDate:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1224   .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1421   .text.HAL_RTC_SetDate:00000000000000e8 $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1426   .text.HAL_RTC_SetAlarm:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1433   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1732   .text.HAL_RTC_SetAlarm:000000000000017c $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1740   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:1747   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2075   .text.HAL_RTC_SetAlarm_IT:00000000000001ac $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2084   .text.RTC_Bcd2ToByte:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2091   .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2118   .text.HAL_RTC_GetTime:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2125   .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2204   .text.HAL_RTC_GetTime:0000000000000054 $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2209   .text.HAL_RTC_GetDate:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2216   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2284   .text.HAL_RTC_GetDate:0000000000000044 $d
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2289   .text.HAL_RTC_GetAlarm:0000000000000000 $t
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2296   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
/var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s:2460   .text.HAL_RTC_GetAlarm:00000000000000c0 $d

UNDEFINED SYMBOLS
HAL_GetTick
ARM GAS  /var/folders/2m/zqg86yyd4hbf56w83tkxjpvr0000gn/T//ccbcwvh3.s 			page 78


HAL_RTCEx_AlarmBEventCallback
